{"version":3,"sources":["actions/index.ts","components/ToolGroup.tsx","components/ToolDrawer.tsx","components/AutosuggestWrapper.tsx","components/CustomAppBar.tsx","utils/fetch.ts","utils/snackbar.ts","components/ReportDialog.tsx","utils/validation.ts","utils/dialogs.ts","utils/loading.ts","components/PromptDialog.tsx","components/UserDialog.tsx","components/CustomMarker.tsx","components/CustomSnackbar.tsx","utils/markers.ts","App.tsx","reducers/drawer.ts","reducers/viewport.ts","reducers/tool.ts","reducers/markers.ts","reducers/snackbar.ts","reducers/spinner.ts","reducers/user.ts","reducers/dialog.ts","reducers/index.ts","store.ts","index.tsx"],"names":["setViewport","payload","type","setReportDialog","setUserDialog","setMarkers","setSnackbar","setUser","useStyles","makeStyles","theme","buttonGroup","flexDirection","toggleButton","justifyContent","textTransform","listIcon","minWidth","padding","marginRight","ToolGroup","classes","tool","useSelector","state","dispatch","useDispatch","ToggleButtonGroup","className","size","value","exclusive","onChange","e","val","ToggleButton","title","Typography","variant","Button","onClick","navigator","geolocation","getCurrentPosition","pos","coords","longitude","latitude","zoom","bearing","pitch","alert","drawer","width","drawerWidth","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","display","alignItems","mixins","ToolDrawer","useTheme","drawerIsOpen","Drawer","clsx","paper","IconButton","data-testid","direction","debounceTimer","MAPBOX_TOKEN","process","searchIcon","position","top","transform","autosuggest","margin","paddingTop","paddingBottom","borderColor","paddingLeft","color","getSuggestions","a","inputValue","trim","toLowerCase","length","queryPlaces","query","fetch","response","json","data","features","AutosuggestWrapper","useState","suggestions","setSuggestions","setValue","viewport","useEffect","clearTimeout","window","setTimeout","Autocomplete","freeSolo","onInputChange","event","newValue","options","renderInput","params","TextField","label","getOptionLabel","option","place_name","renderOption","Number","center","appBar","zIndex","appBarShift","marginLeft","menuButton","hide","opacity","searchBox","SearchAppBar","user","AppBar","Toolbar","aria-label","edge","noWrap","aria-haspopup","open","mode","fetchOptions","method","jwtToken","bodyData","headers","Authorization","body","JSON","stringify","fetchBase","inputData","getJwtToken","result","parse","message","recordset","isNaN","Error","apiQueryUrl","placeDataArray","filter","feature","place_type","split","city","region","country","addressDataArray","address","postcodeDataArray","postcode","text","token","i","localStorage","test","key","snackbarMessage","severity","ReportDialog","reportDialog","markers","subject","setSubject","description","setDescription","editForm","useRef","isAuthorized","reporter","handleClose","requestSubmit","current","handleSubmit","preventDefault","newMarkers","map","marker","markerIndex","dbIndex","id","updateReport","then","catch","err","finally","insertReport","Dialog","onEnter","onClose","aria-labelledby","DialogTitle","DialogContent","Box","pb","mb","ref","onSubmit","disabled","style","all","autoFocus","fullWidth","target","inputProps","minLength","maxLength","required","multiline","rows","DialogActions","passwordPattern","toString","slice","invalidPasswordMessage","usePaperDialogStyles","marginTop","avatar","backgroundColor","palette","secondary","main","form","submit","asyncActionLoaderWrapper","loadingStateSetter","action","errorHandler","PromptDialog","props","forgotUsername","loginUsername","handleSuccess","verificationCode","setVerificationCode","newPassword","setNewPassword","isLoading","setIsLoading","handleVerifyEmail","Auth","confirmSignUp","handleResetPassword","forgotPasswordSubmit","Container","component","maxWidth","name","autoComplete","pattern","UserDialog","userDialog","setLoginUsername","loginPassword","setLoginPassword","registerName","setRegisterName","registerUsername","setRegisterUsername","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","setForgotUsername","promptDialog","setPromptDialog","currentSession","session","console","log","currentAuthenticatedUser","username","setUserStatus","switchToRegister","switchToLogin","switchToForgot","handleRegister","signUp","password","attributes","email","signUpResponse","handleLogin","signIn","handleForgot","forgotPassword","handleLogout","signOut","registerContent","Avatar","Grid","container","justify","item","Link","href","loginContent","FormControlLabel","control","Checkbox","xs","logoutContent","forgotContent","CustomMarker","offsetLeft","offsetTop","localIndex","fontWeight","cursor","deleteMarkerLocally","confirm","deleteReport","Alert","elevation","CustomSnackbar","snackbar","reason","Snackbar","autoHideDuration","addNewMarkerLocally","reverseGeocode","res","newMarker","initialTheme","primary","purple","blue","root","content","flexGrow","height","overflow","addToolSelected","App","muiTheme","createMuiTheme","spinner","getAllReports","reports","handleClick","tagName","lngLat","ThemeProvider","CssBaseline","mapStyle","onViewportChange","mapboxApiAccessToken","onNativeClick","useMemo","m","CircularProgress","left","drawerReducer","initialState","viewportReducer","toolReducer","markerReducer","undefined","snackbarReducer","spinnerReducer","userReducer","reportDialogInitialState","userDialogInitialState","allReducers","combineReducers","store","createStore","Amplify","configure","mandatorySignIn","userPoolId","userPoolWebClientId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d56bf23b.chunk.js","sourcesContent":["import { Action } from 'redux';\r\nimport { ReportDialog, UserDialog, Marker, Tool, Viewport, PayloadAction, Snackbar, User } from '../types';\r\n\r\nexport const openDrawer = (): Action => ({ type: 'OPEN-DRAWER' });\r\nexport const closeDrawer = (): Action => ({ type: 'CLOSE-DRAWER' });\r\nexport const showSpinner = (): Action => ({ type: 'SHOW-SPINNER' });\r\nexport const hideSpinner = (): Action => ({ type: 'HIDE-SPINNER' });\r\n\r\nexport const setTool = (payload: Tool): PayloadAction<Tool> => {\r\n    return {\r\n        type: 'TOOL',\r\n        payload\r\n    }\r\n};\r\n\r\nexport const setViewport = (payload: Viewport): PayloadAction<Viewport> => {\r\n    return {\r\n        type: 'VIEWPORT',\r\n        payload\r\n    }\r\n};\r\n\r\nexport const setReportDialog = (payload: ReportDialog): PayloadAction<ReportDialog> => {\r\n    return {\r\n        type: 'REPORT-DIALOG',\r\n        payload\r\n    }\r\n};\r\n\r\nexport const setUserDialog = (payload: UserDialog): PayloadAction<UserDialog> => {\r\n    return {\r\n        type: 'USER-DIALOG',\r\n        payload\r\n    }\r\n};\r\n\r\nexport const setMarkers = (payload: Marker[]): PayloadAction<Marker[]> => {\r\n    return {\r\n        type: 'MARKERS',\r\n        payload\r\n    }\r\n};\r\n\r\nexport const setSnackbar = (payload: Snackbar): PayloadAction<Snackbar> => {\r\n    return {\r\n        type: 'SNACKBAR',\r\n        payload\r\n    }\r\n};\r\n\r\nexport const setUser = (payload: User): PayloadAction<User> => {\r\n    return {\r\n        type: 'USER',\r\n        payload\r\n    }\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddLocationIcon from '@material-ui/icons/AddLocation';\r\nimport EditLocationIcon from '@material-ui/icons/EditLocation';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setTool, setViewport } from '../actions';\r\nimport { RootState } from '../reducers';\r\nimport { Tool } from '../types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    buttonGroup: {\r\n        flexDirection: 'column'\r\n    },\r\n    toggleButton: {\r\n        justifyContent: 'flex-start',\r\n        textTransform: 'none'\r\n    },\r\n    listIcon: {\r\n        minWidth: '56px',\r\n        padding: '0 16px',\r\n        marginRight: '12px'\r\n    }\r\n}));\r\n\r\nexport default function ToolGroup() {\r\n    const classes = useStyles();\r\n    const tool = useSelector((state: RootState) => state.tool);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (e: any, val: Tool) => dispatch(setTool(val));\r\n\r\n    const centerGPS = () => {\r\n        if (!navigator.geolocation) {\r\n            alert('Your browser does not support GeoLocation.');\r\n        } else {\r\n            navigator.geolocation.getCurrentPosition(pos => {\r\n                if (pos.coords) {\r\n                    dispatch(setViewport({\r\n                        longitude: pos.coords.longitude,\r\n                        latitude: pos.coords.latitude,\r\n                        zoom: 16,\r\n                        bearing: 0,\r\n                        pitch: 0,\r\n                    }))\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToggleButtonGroup className={classes.buttonGroup} size='small' value={tool} exclusive onChange={handleChange}>\r\n                <ToggleButton className={classes.toggleButton} value='add' title='Report new faults'>\r\n                    <AddLocationIcon className={classes.listIcon} />\r\n                    <Typography variant='body1'>Report a new fault</Typography>\r\n                </ToggleButton>\r\n                <ToggleButton className={classes.toggleButton} value='edit' title='Edit existing faults'>\r\n                    <EditLocationIcon className={classes.listIcon} />\r\n                    <Typography variant='body1'>Edit submitted faults</Typography>\r\n                </ToggleButton>\r\n                <ToggleButton className={classes.toggleButton} value='delete' title='Remove faults'>\r\n                    <DeleteIcon className={classes.listIcon} />\r\n                    <Typography variant='body1'>Delete faults</Typography>\r\n                </ToggleButton>\r\n                <ToggleButton className={classes.toggleButton} value='review' title='Review faults in detail'>\r\n                    <NotListedLocationIcon className={classes.listIcon} />\r\n                    <Typography variant='body1'>Review faults</Typography>\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n            <Button className={classes.toggleButton} onClick={centerGPS} title='Center map to your location'>\r\n                <MyLocationIcon className={classes.listIcon} />\r\n                <Typography variant='body1'>Center to your location</Typography>\r\n            </Button>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ToolGroup from './ToolGroup';\r\nimport { drawerWidth } from '../App';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { closeDrawer } from '../actions';\r\nimport { RootState } from '../reducers';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerClose: {\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    buttonGroup: {\r\n        flexDirection: 'column'\r\n    },\r\n    toggleButton: {\r\n        justifyContent: 'flex-start',\r\n        textTransform: 'none'\r\n    },\r\n    listIcon: {\r\n        minWidth: '56px',\r\n        padding: '0 16px',\r\n        marginRight: '12px'\r\n    }\r\n}));\r\n\r\nexport default function ToolDrawer() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const drawerIsOpen = useSelector((state: RootState) => state.drawerIsOpen);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Drawer\r\n            variant='permanent'\r\n            className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: drawerIsOpen,\r\n                [classes.drawerClose]: !drawerIsOpen,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                    [classes.drawerOpen]: drawerIsOpen,\r\n                    [classes.drawerClose]: !drawerIsOpen,\r\n                }),\r\n            }}\r\n        >\r\n            <div className={classes.toolbar}>\r\n                <IconButton onClick={() => dispatch(closeDrawer())} data-testid='drawer-button'>\r\n                    {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                </IconButton>\r\n            </div>\r\n            <ToolGroup />\r\n        </Drawer>\r\n\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { TextField, makeStyles } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setViewport } from '../actions';\r\nimport { RootState } from '../reducers';\r\nimport { GeoJSONFeature, GeoJSONFeatureCollection } from '../types';\r\n\r\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN;\r\nlet debounceTimer: number;\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  searchIcon: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    transform: 'translate(50%, -50%)'\r\n  },\r\n  autosuggest: {\r\n    '& .MuiFormControl-root': {\r\n      margin: '0 0 0 5px'\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      paddingTop: 0,\r\n      paddingBottom: 0\r\n    },\r\n    '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: '#fff'\r\n    },\r\n    '& .MuiAutocomplete-inputRoot': {\r\n      paddingLeft: '32px',\r\n      color: '#fff'\r\n    },\r\n    '& .MuiInputLabel-root': {\r\n      transform: 'translate(36px, 12px) scale(1)',\r\n      padding: 0,\r\n      color: '#fff'\r\n    },\r\n    '& .MuiInputLabel-shrink': {\r\n      transform: 'translate(14px, -6px) scale(0.75)'\r\n    },\r\n  }\r\n}));\r\n\r\nconst getSuggestions = async (value: string) => {\r\n  const inputValue = value.trim().toLowerCase();\r\n  return inputValue.length < 2 ? [] : queryPlaces(value);\r\n};\r\n\r\nasync function queryPlaces(query: string) {\r\n  const response = await fetch(\r\n    'https://api.mapbox.com/geocoding/v5/mapbox.places/' +\r\n      query +\r\n      '.json?access_token=' +\r\n      MAPBOX_TOKEN\r\n  );\r\n  const data: GeoJSONFeatureCollection = await response.json();\r\n  return data.features || [];\r\n}\r\n\r\nfunction AutosuggestWrapper() {\r\n  const classes = useStyles();\r\n  const [suggestions, setSuggestions] = useState<GeoJSONFeature[]>([]);\r\n  const [value, setValue] = useState('');\r\n\r\n  const viewport = useSelector((state: RootState) => state.viewport);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    async function asyncSet() {\r\n      setSuggestions(await getSuggestions(value));\r\n    }\r\n    clearTimeout(debounceTimer);\r\n    debounceTimer = window.setTimeout(asyncSet, 300);\r\n  }, [value]);\r\n\r\n  return (\r\n    <>\r\n      <SearchIcon className={classes.searchIcon} />\r\n      <Autocomplete\r\n        className={classes.autosuggest}\r\n        freeSolo\r\n        onInputChange={(event, newValue) => setValue(newValue)}\r\n        options={suggestions}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Search for a location...\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n          />\r\n        )}\r\n        getOptionLabel={(option) => option.place_name}\r\n        renderOption={(option) => {\r\n          return (\r\n            <div\r\n              onClick={() => {\r\n                dispatch(\r\n                  setViewport({\r\n                    ...viewport,\r\n                    longitude: Number(option.center[0]),\r\n                    latitude: Number(option.center[1]),\r\n                    zoom: 16\r\n                  })\r\n                );\r\n              }}\r\n            >\r\n              {option.place_name}\r\n            </div>\r\n          );\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AutosuggestWrapper;\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport clsx from 'clsx';\r\nimport AutosuggestWrapper from './AutosuggestWrapper';\r\nimport { drawerWidth } from '../App';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { openDrawer, closeDrawer, setUserDialog } from '../actions';\r\nimport { RootState } from '../reducers';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`\r\n  },\r\n  menuButton: {\r\n    marginRight: 36\r\n  },\r\n  hide: {\r\n    opacity: 0.5\r\n  },\r\n  searchBox: {\r\n    width: '300px'\r\n  },\r\n  toolbar: {\r\n    justifyContent: 'space-between'\r\n  }\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n  const classes = useStyles();\r\n  const drawerIsOpen = useSelector((state: RootState) => state.drawerIsOpen);\r\n  const user = useSelector((state: RootState) => state.user);\r\n  const dispatch = useDispatch();\r\n  \r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      className={clsx(classes.appBar, {\r\n        [classes.appBarShift]: drawerIsOpen\r\n      })}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={drawerIsOpen ? () => dispatch(closeDrawer()) : () => dispatch(openDrawer())}\r\n          edge=\"start\"\r\n          className={clsx(classes.menuButton, {\r\n            [classes.hide]: drawerIsOpen\r\n          })}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" noWrap>\r\n          Fault Information System\r\n        </Typography>\r\n        <div className={classes.searchBox}>\r\n          <AutosuggestWrapper />\r\n        </div>\r\n        <IconButton\r\n          edge=\"end\"\r\n          aria-label=\"account of current user\"\r\n          aria-haspopup=\"true\"\r\n          onClick={() => dispatch(setUserDialog({ open: true, mode: user === null ? 'login' : 'logout' }))}\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import {\r\n  HTTPMethod,\r\n  ReportBodyInsert,\r\n  ReportBodyUpdate,\r\n  ReportBodyDelete,\r\n  QueryGetResult,\r\n  QuerySetResult,\r\n  GeoJSONFeatureCollection\r\n} from '../types';\r\n\r\nconst API_URL = 'https://ey86blceac.execute-api.us-east-1.amazonaws.com/prod/reports';\r\n\r\nconst headers = (jwtToken?: string): any => {\r\n  if (!jwtToken)\r\n    return {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n  return {\r\n    //credentials: 'include',\r\n    headers: {\r\n      Authorization: 'Bearer ' + jwtToken,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n};\r\n\r\nconst fetchOptions = (\r\n  method: HTTPMethod,\r\n  jwtToken?: string,\r\n  bodyData?: ReportBodyInsert | ReportBodyUpdate | ReportBodyDelete\r\n) => ({\r\n  method,\r\n  ...headers(jwtToken),\r\n  body: JSON.stringify(bodyData)\r\n});\r\n\r\nconst fetchBase = async (\r\n  method: HTTPMethod,\r\n  inputData?: ReportBodyInsert | ReportBodyUpdate | ReportBodyDelete\r\n) => {\r\n  const result = await fetch(API_URL, fetchOptions(method, getJwtToken(), inputData));\r\n  const json = await result.json();\r\n  return JSON.parse(json.body).message;\r\n};\r\n\r\nexport async function getAllReports() {\r\n  const result: QueryGetResult = await fetchBase('GET');\r\n  return result.recordset;\r\n}\r\n\r\nexport async function insertReport(data: ReportBodyInsert) {\r\n  const result: QuerySetResult = await fetchBase('POST', data);\r\n  if (isNaN(result.recordset[0].result as any))\r\n    throw Error('Failed to insert: ' + result.recordset[0].result);\r\n  return result.recordset[0].result;\r\n}\r\n\r\nexport async function updateReport(data: ReportBodyUpdate) {\r\n  const result: QuerySetResult = await fetchBase('PUT', data);\r\n  if (result.recordset[0].result !== 'Success')\r\n    throw Error('Failed to update: ' + result.recordset[0].result);\r\n  return result.recordset[0].result;\r\n}\r\n\r\nexport async function deleteReport(data: ReportBodyDelete) {\r\n  const result: QuerySetResult = await fetchBase('DELETE', data);\r\n  if (result.recordset[0].result !== 'Success')\r\n    throw Error('Failed to delete: ' + result.recordset[0].result);\r\n  return result.recordset[0].result;\r\n}\r\n\r\nexport async function reverseGeocode(apiQueryUrl: string) {\r\n  const result = await fetch(apiQueryUrl);\r\n  const json: GeoJSONFeatureCollection = await result.json();\r\n\r\n  let city, region, country, address, postcode;\r\n\r\n  const placeDataArray = json.features.filter((feature) => feature.place_type[0] === 'place');\r\n  if (placeDataArray.length > 0) [city, region, country] = placeDataArray[0].place_name.split(', ');\r\n\r\n  const addressDataArray = json.features.filter((feature) => feature.place_type[0] === 'address');\r\n  if (addressDataArray.length > 0) address = addressDataArray[0].place_name.split(', ')[0];\r\n\r\n  const postcodeDataArray = json.features.filter((feature) => feature.place_type[0] === 'postcode');\r\n  if (postcodeDataArray.length > 0) postcode = postcodeDataArray[0].text;\r\n\r\n  return { city, region, country, address, postcode };\r\n}\r\n\r\nfunction getJwtToken(): string | undefined {\r\n  let token = null;\r\n  for (let i = 0; i < localStorage.length; i++) {\r\n    if (/accessToken$/.test(localStorage.key(i) as string)) token = localStorage[localStorage.key(i) as string];\r\n  }\r\n  return token;\r\n}\r\n","import { Snackbar } from \"../types\";\r\nimport { setSnackbar } from '../actions';\r\nimport { Dispatch } from \"redux\";\r\n\r\nexport const snackbarMessage = (message: string, severity: Snackbar[\"severity\"], dispatch: Dispatch) => {\r\n    dispatch(setSnackbar({\r\n        message,\r\n        severity,\r\n        open: true,\r\n    }))\r\n};","import React, { useState, useRef, SyntheticEvent } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setMarkers, showSpinner, hideSpinner, setReportDialog } from '../actions';\r\nimport { insertReport, updateReport } from '../utils/fetch';\r\nimport { snackbarMessage } from '../utils/snackbar';\r\nimport { Marker } from '../types';\r\nimport { RootState } from '../reducers';\r\n\r\nexport default function ReportDialog() {\r\n  const reportDialog = useSelector((state: RootState) => state.reportDialog);\r\n  const tool = useSelector((state: RootState) => state.tool);\r\n  const markers = useSelector((state: RootState) => state.markers);\r\n  const user = useSelector((state: RootState) => state.user);\r\n  const [subject, setSubject] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const dispatch = useDispatch();\r\n  const editForm = useRef<HTMLFormElement>(null);\r\n\r\n  const isAuthorized =\r\n    reportDialog.reporter === user || reportDialog.reporter === 'guest' ? true : false;\r\n\r\n  const handleSetup = () => {\r\n    setSubject(reportDialog.subject);\r\n    setDescription(reportDialog.description);\r\n  };\r\n  const handleClose = () => dispatch(setReportDialog({ ...reportDialog, open: false }));\r\n\r\n  const requestSubmit = () => {\r\n    editForm.current?.requestSubmit(); // Validate form and submit\r\n  };\r\n\r\n  const handleSubmit = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n\r\n    const newMarkers = markers.map((marker: Marker, i: number) => {\r\n      // Find the marker that initiated the edit dialog\r\n      if (i === reportDialog.markerIndex) {\r\n        const { latitude, longitude, city, postcode, address, reporter, id: dbIndex } = marker;\r\n        dispatch(showSpinner());\r\n        if (dbIndex) {\r\n          // Marker already has an associated database id: wanted action is update\r\n          updateReport({ id: dbIndex, subject, description })\r\n            .then(() => snackbarMessage('Report updated.', 'success', dispatch))\r\n            .catch((err) => snackbarMessage(err.message, 'error', dispatch))\r\n            .finally(() => dispatch(hideSpinner()));\r\n        } else {\r\n          // Marker has no existing database id: wanted action is insert\r\n          insertReport({\r\n            subject,\r\n            description,\r\n            latitude,\r\n            longitude,\r\n            city,\r\n            postcode,\r\n            address,\r\n            reporter,\r\n          })\r\n            .then((result) => {\r\n              let newMarkers = [...markers];\r\n              newMarkers[i].id = Number(result);\r\n              newMarkers[i].subject = subject;\r\n              newMarkers[i].description = description;\r\n              dispatch(setMarkers(newMarkers));\r\n              snackbarMessage('Report posted.', 'success', dispatch);\r\n            })\r\n            .catch((err) => snackbarMessage(err.message, 'error', dispatch))\r\n            .finally(() => dispatch(hideSpinner()));\r\n        }\r\n        return { ...marker, subject, description };\r\n      } else return marker;\r\n    });\r\n\r\n    dispatch(setMarkers(newMarkers));\r\n    handleClose();\r\n  };\r\n\r\n  const reviewModeContent = () => (\r\n    <>\r\n      <DialogTitle id=\"form-dialog-title\">{subject}</DialogTitle>\r\n      <DialogContent>\r\n        <Box color=\"text.secondary\" pb=\"16px\">\r\n          <Box mb=\"16px\">\r\n            <Typography display=\"inline\">Reported by: </Typography>\r\n            <Typography display=\"inline\" color=\"primary\">\r\n              {' ' + reportDialog.reporter}\r\n            </Typography>\r\n          </Box>\r\n          <Box mb=\"16px\">\r\n            <Typography>\r\n              {reportDialog.address}, {reportDialog.postcode}, {reportDialog.city}\r\n            </Typography>\r\n            <Typography>Latitude: {reportDialog.latitude}</Typography>\r\n            <Typography>Longitude: {reportDialog.longitude}</Typography>\r\n          </Box>\r\n          <Typography color=\"textPrimary\">{description}</Typography>\r\n        </Box>\r\n      </DialogContent>\r\n    </>\r\n  );\r\n\r\n  const nonReviewModeContent = () => (\r\n    <>\r\n      <DialogTitle id=\"form-dialog-title\">Fault Details</DialogTitle>\r\n      <DialogContent>\r\n        <Box color=\"text.secondary\" mb=\"16px\">\r\n          <Box mb=\"8px\">\r\n            <Typography color=\"textSecondary\" display=\"inline\">\r\n              Reported by: \r\n            </Typography>\r\n            <Typography color=\"primary\" display=\"inline\">\r\n              {' ' + reportDialog.reporter}\r\n            </Typography>\r\n          </Box>\r\n          <Typography>\r\n            Set a subject text that appears in the map and a more in-depth description of the issue.\r\n          </Typography>\r\n        </Box>\r\n        <form ref={editForm} onSubmit={handleSubmit}>\r\n          <fieldset disabled={!isAuthorized} style={{ all: 'unset' }}>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"subject\"\r\n              label=\"Subject\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={subject}\r\n              onChange={(e) => setSubject(e.target.value)}\r\n              inputProps={{ minLength: 3, maxLength: 50 }}\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"description\"\r\n              label=\"Description\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              inputProps={{ minLength: 5, maxLength: 500 }}\r\n              multiline={true}\r\n              rows=\"3\"\r\n              required\r\n            />\r\n            <input type=\"submit\" style={{ display: 'none' }} />\r\n          </fieldset>\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={requestSubmit} color=\"primary\" disabled={!isAuthorized}>\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      onEnter={handleSetup}\r\n      open={reportDialog.open}\r\n      onClose={() => handleClose()}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      {tool === 'review' ? reviewModeContent() : nonReviewModeContent()}\r\n    </Dialog>\r\n  );\r\n}\r\n","// At least one number, lower case, upper case and a special character. Min length 8, max 255.\r\nconst passwordValidator = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[$^*.[\\]{}()?'\"!@#%&/\\\\,><:;|_~`]).{8,255}/;\r\n\r\n// Required to be string for HTML5 validation (pattern)\r\nexport const passwordPattern = passwordValidator.toString().slice(1, -1);\r\n\r\nexport const invalidPasswordMessage =\r\n  'Password should be at least 8 characters long and have at least one lower case, upper case, special character and a number.';","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const usePaperDialogStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      paddingBottom: '15px'\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2)\r\n    }\r\n  }));","import { snackbarMessage } from './snackbar';\r\nimport { showSpinner, hideSpinner } from '../actions';\r\nimport { Dispatch } from 'redux';\r\n\r\nexport const asyncActionLoaderWrapper = async (\r\n  loadingStateSetter: React.Dispatch<boolean>,\r\n  dispatch: Dispatch,\r\n  action: () => Promise<any>,\r\n  errorHandler?: (error: Error) => any\r\n) => {\r\n  try {\r\n    loadingStateSetter(true);\r\n    dispatch(showSpinner());\r\n    await action();\r\n  } catch (err) {\r\n    if (errorHandler) errorHandler(err);\r\n    else snackbarMessage(err.message, 'error', dispatch);\r\n  } finally {\r\n    dispatch(hideSpinner());\r\n    loadingStateSetter(false);\r\n  }\r\n};\r\n","import React, { useState, SyntheticEvent } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Container from '@material-ui/core/Container';\r\nimport { usePaperDialogStyles } from '../utils/dialogs';\r\nimport { useDispatch } from 'react-redux';\r\nimport { passwordPattern, invalidPasswordMessage } from '../utils/validation';\r\nimport { snackbarMessage } from '../utils/snackbar';\r\nimport { asyncActionLoaderWrapper } from '../utils/loading';\r\nimport Auth from '@aws-amplify/auth';\r\n\r\nexport default function PromptDialog(props: any) {\r\n  const classes = usePaperDialogStyles();\r\n  const dispatch = useDispatch();\r\n  const { open, mode, forgotUsername, loginUsername, handleClose, handleSuccess } = props;\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleVerifyEmail = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    asyncActionLoaderWrapper(\r\n      setIsLoading,\r\n      dispatch,\r\n      async () => {\r\n        await Auth.confirmSignUp(loginUsername, verificationCode);\r\n        snackbarMessage('Successfully confirmed user.', 'success', dispatch);\r\n        handleSuccess();\r\n        handleClose();\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleResetPassword = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    asyncActionLoaderWrapper(\r\n      setIsLoading,\r\n      dispatch,\r\n      async () => {\r\n        await Auth.forgotPasswordSubmit(forgotUsername, verificationCode, newPassword);\r\n        snackbarMessage('Successfully set a new password.', 'success', dispatch);\r\n        handleSuccess();\r\n        handleClose();\r\n      }\r\n    );\r\n  };\r\n\r\n  const verifyEmailContent = () => (\r\n    <>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Verify Email\r\n      </Typography>\r\n      <form id=\"verification-form\" className={classes.form} onSubmit={handleVerifyEmail}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"code\"\r\n          label=\"Verification code\"\r\n          id=\"verification-code\"\r\n          autoFocus\r\n          value={verificationCode}\r\n          onChange={(e) => setVerificationCode(e.target.value)}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          disabled={isLoading}\r\n        >\r\n          Send reset confirmation\r\n        </Button>\r\n      </form>\r\n      <Button onClick={handleClose} fullWidth variant=\"outlined\" color=\"primary\">\r\n        Cancel\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  const resetPasswordContent = () => (\r\n    <>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Change password\r\n      </Typography>\r\n      <form id=\"reset-form\" className={classes.form} onSubmit={handleResetPassword}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"code\"\r\n          label=\"Verification code\"\r\n          id=\"verification-code\"\r\n          autoFocus\r\n          value={verificationCode}\r\n          onChange={(e) => setVerificationCode(e.target.value)}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"New Password\"\r\n          type=\"password\"\r\n          id=\"new-password\"\r\n          autoComplete=\"new-password\"\r\n          inputProps={{ pattern: passwordPattern, title: invalidPasswordMessage }}\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          disabled={isLoading}\r\n        >\r\n          Change password\r\n        </Button>\r\n      </form>\r\n      <Button onClick={handleClose} fullWidth variant=\"outlined\" color=\"primary\">\r\n        Cancel\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  const renderContent = () => {\r\n    if (mode === 'verify') return verifyEmailContent();\r\n    else if (mode === 'reset') return resetPasswordContent();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n      <Container component=\"main\" maxWidth=\"sm\">\r\n        <div className={classes.paper}>{renderContent()}</div>\r\n      </Container>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useState, useEffect, SyntheticEvent } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setUserDialog, setUser } from '../actions';\r\nimport { RootState } from '../reducers';\r\nimport { snackbarMessage } from '../utils/snackbar';\r\nimport { passwordPattern, invalidPasswordMessage } from '../utils/validation';\r\nimport { usePaperDialogStyles } from '../utils/dialogs';\r\nimport { asyncActionLoaderWrapper } from '../utils/loading';\r\nimport PromptDialog from './PromptDialog';\r\nimport Auth from '@aws-amplify/auth';\r\n\r\nexport default function UserDialog() {\r\n  const classes = usePaperDialogStyles();\r\n  const dispatch = useDispatch();\r\n  const userDialog = useSelector((state: RootState) => state.userDialog);\r\n  const user = useSelector((state: RootState) => state.user);\r\n\r\n  const [loginUsername, setLoginUsername] = useState('');\r\n  const [loginPassword, setLoginPassword] = useState('');\r\n  const [registerName, setRegisterName] = useState('');\r\n  const [registerUsername, setRegisterUsername] = useState('');\r\n  const [registerEmail, setRegisterEmail] = useState('');\r\n  const [registerPassword, setRegisterPassword] = useState('');\r\n  const [forgotUsername, setForgotUsername] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [promptDialog, setPromptDialog] = useState({ open: false, mode: 'reset' });\r\n\r\n  useEffect(() => {\r\n    async function setUserStatus() {\r\n      try {\r\n        const session = await Auth.currentSession();\r\n        console.log(session);\r\n        const user = await Auth.currentAuthenticatedUser();\r\n        console.log(user);\r\n        dispatch(setUser(user.username));\r\n      } catch (err) {\r\n        if (err && err !== 'No current user') snackbarMessage(err.message, 'error', dispatch);\r\n      }\r\n    }\r\n    setUserStatus();\r\n  }, [dispatch]);\r\n\r\n  const handleClose = () => dispatch(setUserDialog({ ...userDialog, open: false }));\r\n  const switchToRegister = () => dispatch(setUserDialog({ mode: 'register', open: true }));\r\n  const switchToLogin = () => dispatch(setUserDialog({ mode: 'login', open: true }));\r\n  const switchToForgot = () => dispatch(setUserDialog({ mode: 'forgot', open: true }));\r\n  const switchToLogout = () => dispatch(setUserDialog({ mode: 'logout', open: true }));\r\n\r\n  const handleRegister = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    asyncActionLoaderWrapper(\r\n      setIsLoading,\r\n      dispatch,\r\n      async () => {\r\n      const signUpResponse = await Auth.signUp({\r\n        username: registerUsername,\r\n        password: registerPassword,\r\n        attributes: {\r\n          email: registerEmail,\r\n          name: registerName,\r\n        },\r\n      });\r\n      snackbarMessage(\r\n        'Successfully signed up. Check your email for verification code.',\r\n        'success',\r\n        dispatch\r\n      );\r\n      console.log(signUpResponse);\r\n      switchToLogin();\r\n      setLoginUsername(registerUsername);\r\n      setLoginPassword(registerPassword);\r\n      setPromptDialog({ open: true, mode: 'verify' });\r\n    });\r\n  };\r\n\r\n  const handleLogin = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    asyncActionLoaderWrapper(\r\n      setIsLoading,\r\n      dispatch,\r\n      async () => {\r\n      const user = await Auth.signIn(loginUsername, loginPassword);\r\n      console.log(user);\r\n      switchToLogout();\r\n      dispatch(setUser(user.username));\r\n      snackbarMessage('Successfully logged in as ' + user.username, 'success', dispatch);\r\n    }, (err) => {\r\n      if (err.name === 'UserNotConfirmedException') {\r\n        snackbarMessage(\r\n          'Your account needs to be confirmed. Check your email for confirmation code.',\r\n          'info',\r\n          dispatch\r\n        );\r\n        setPromptDialog({ open: true, mode: 'verify' });\r\n      } else snackbarMessage(err.message, 'error', dispatch);\r\n    });\r\n  };\r\n\r\n  const handleForgot = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    asyncActionLoaderWrapper(\r\n      setIsLoading,\r\n      dispatch,\r\n      async () => {\r\n      await Auth.forgotPassword(forgotUsername);\r\n      snackbarMessage('Verification code sent to your email.', 'info', dispatch);\r\n      setPromptDialog({ open: true, mode: 'reset' });\r\n    });\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    asyncActionLoaderWrapper(\r\n      setIsLoading,\r\n      dispatch,\r\n      async () => {\r\n      Auth.signOut();\r\n      snackbarMessage('Logged out successfully.', 'success', dispatch);\r\n      dispatch(setUser(null));\r\n      switchToLogin();\r\n    });\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (userDialog.mode === 'register') return registerContent();\r\n    else if (userDialog.mode === 'login') return loginContent();\r\n    else if (userDialog.mode === 'forgot') return forgotContent();\r\n    else if (userDialog.mode === 'logout') return logoutContent();\r\n  };\r\n\r\n  const registerContent = () => (\r\n    <>\r\n      <Avatar className={classes.avatar}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Sign up\r\n      </Typography>\r\n      <form\r\n        id=\"register-form\"\r\n        className={classes.form}\r\n        onSubmit={handleRegister}\r\n        autoComplete=\"off\"\r\n      >\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          label=\"Full Name\"\r\n          name=\"name\"\r\n          id=\"register-name\"\r\n          autoFocus\r\n          autoComplete=\"name\"\r\n          inputProps={{ minLength: 5, maxLength: 70 }}\r\n          value={registerName}\r\n          onChange={(e) => setRegisterName(e.target.value)}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          label=\"Username\"\r\n          name=\"username\"\r\n          id=\"register-username\"\r\n          autoComplete=\"username\"\r\n          inputProps={{ minLength: 3, maxLength: 50 }}\r\n          value={registerUsername}\r\n          onChange={(e) => setRegisterUsername(e.target.value)}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"email\"\r\n          label=\"Email Address\"\r\n          type=\"email\"\r\n          id=\"register-email\"\r\n          autoComplete=\"email\"\r\n          inputProps={{ minLength: 5, maxLength: 255 }}\r\n          value={registerEmail}\r\n          onChange={(e) => setRegisterEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"register-password\"\r\n          autoComplete=\"new-password\"\r\n          inputProps={{ pattern: passwordPattern, title: invalidPasswordMessage }}\r\n          value={registerPassword}\r\n          onChange={(e) => setRegisterPassword(e.target.value)}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          disabled={isLoading}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n      </form>\r\n      <Button onClick={switchToLogin} fullWidth variant=\"outlined\" color=\"primary\">\r\n        Cancel\r\n      </Button>\r\n      <Grid container justify=\"flex-end\" style={{ marginTop: '16px' }}>\r\n        <Grid item>\r\n          <Link href=\"#\" variant=\"body2\" onClick={switchToLogin}>\r\n            Already have an account? Sign in\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n\r\n  const loginContent = () => (\r\n    <>\r\n      <Avatar className={classes.avatar}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Sign in\r\n      </Typography>\r\n      <form id=\"login-form\" className={classes.form} onSubmit={handleLogin}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"username\"\r\n          label=\"Username\"\r\n          id=\"login-username\"\r\n          autoComplete=\"username\"\r\n          autoFocus\r\n          inputProps={{ minLength: 3, maxLength: 50 }}\r\n          value={loginUsername}\r\n          onChange={(e) => setLoginUsername(e.target.value)}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"login-password\"\r\n          autoComplete=\"current-password\"\r\n          inputProps={{ pattern: passwordPattern, title: invalidPasswordMessage }}\r\n          value={loginPassword}\r\n          onChange={(e) => setLoginPassword(e.target.value)}\r\n        />\r\n        <FormControlLabel\r\n          control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n          label=\"Remember me\"\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          disabled={isLoading}\r\n        >\r\n          Sign In\r\n        </Button>\r\n      </form>\r\n      <Button onClick={handleClose} fullWidth variant=\"outlined\" color=\"primary\">\r\n        Cancel\r\n      </Button>\r\n      <Grid container style={{ marginTop: '16px' }}>\r\n        <Grid item xs>\r\n          <Link href=\"#\" variant=\"body2\" onClick={switchToForgot}>\r\n            Forgot password?\r\n          </Link>\r\n        </Grid>\r\n        <Grid item>\r\n          <Link href=\"#\" variant=\"body2\" onClick={switchToRegister}>\r\n            {\"Don't have an account? Sign Up\"}\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n\r\n  const logoutContent = () => (\r\n    <>\r\n      <Avatar className={classes.avatar}>\r\n        <PermIdentityOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Welcome back, <strong>{user}</strong>!\r\n      </Typography>\r\n      <Button\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n        onClick={handleLogout}\r\n      >\r\n        Logout\r\n      </Button>\r\n      <Button onClick={handleClose} fullWidth variant=\"outlined\" color=\"primary\">\r\n        Cancel\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  const forgotContent = () => (\r\n    <>\r\n      <Avatar className={classes.avatar}>\r\n        <LockOpenOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Reset your password\r\n      </Typography>\r\n      <form id=\"forgot-form\" className={classes.form} onSubmit={handleForgot}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"username\"\r\n          label=\"Username\"\r\n          type=\"username\"\r\n          id=\"forgot-username\"\r\n          autoFocus\r\n          value={forgotUsername}\r\n          onChange={(e) => setForgotUsername(e.target.value)}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          disabled={isLoading}\r\n        >\r\n          Send reset confirmation\r\n        </Button>\r\n      </form>\r\n      <Button onClick={switchToLogin} fullWidth variant=\"outlined\" color=\"primary\">\r\n        Cancel\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Dialog open={userDialog.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>{renderContent()}</div>\r\n      </Container>\r\n      <PromptDialog\r\n        open={promptDialog.open}\r\n        mode={promptDialog.mode}\r\n        forgotUsername={forgotUsername}\r\n        loginUsername={loginUsername}\r\n        handleClose={() => setPromptDialog({ ...promptDialog, open: false })}\r\n        handleSuccess={switchToLogin}\r\n      />\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Marker } from 'react-map-gl';\r\nimport MarkerIcon from '@material-ui/icons/Room';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setReportDialog, setMarkers, showSpinner, hideSpinner } from '../actions';\r\nimport { snackbarMessage } from '../utils/snackbar';\r\nimport { deleteReport } from '../utils/fetch';\r\nimport { RootState } from '../reducers';\r\nimport { Marker as IMarker, CustomMarkerProps } from '../types';\r\n\r\nfunction CustomMarker(props: CustomMarkerProps) {\r\n  const {\r\n    address,\r\n    city,\r\n    postcode,\r\n    description,\r\n    latitude,\r\n    longitude,\r\n    offsetLeft,\r\n    offsetTop,\r\n    reporter,\r\n    subject,\r\n    localIndex,\r\n    dbIndex = null\r\n  } = props;\r\n\r\n  const tool = useSelector((state: RootState) => state.tool);\r\n  const markers = useSelector((state: RootState) => state.markers);\r\n  const user = useSelector((state: RootState) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    function deleteMarkerLocally() {\r\n      const newMarkers = markers.filter((marker: IMarker, i: number) =>\r\n        i === localIndex ? false : true\r\n      );\r\n      dispatch(setMarkers(newMarkers));\r\n    }\r\n\r\n    if (tool === 'delete') {\r\n      if (!dbIndex) return deleteMarkerLocally();\r\n      if (reporter !== 'guest' && reporter !== user)\r\n        return snackbarMessage(\r\n          'Not authorized to delete a report posted by verified user.',\r\n          'warning',\r\n          dispatch\r\n        );\r\n      if (window.confirm('Delete this report?')) {\r\n        dispatch(showSpinner());\r\n        deleteReport({ id: dbIndex })\r\n          .then(() => {\r\n            deleteMarkerLocally();\r\n            snackbarMessage(\r\n              'Report deleted.',\r\n              'success',\r\n              dispatch\r\n            );\r\n          })\r\n          .catch((err) =>\r\n          snackbarMessage(\r\n            err.message,\r\n            'error',\r\n            dispatch\r\n          ))\r\n          .finally(() => dispatch(hideSpinner()));\r\n      }\r\n    } else {\r\n      dispatch(\r\n        setReportDialog({\r\n          address: address || '---',\r\n          city: city || '---',\r\n          postcode: postcode || '---',\r\n          subject,\r\n          description,\r\n          reporter,\r\n          markerIndex: localIndex,\r\n          latitude,\r\n          longitude,\r\n          open: true\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Marker latitude={latitude} longitude={longitude} offsetLeft={offsetLeft} offsetTop={offsetTop}>\r\n      <div\r\n        style={{ alignItems: 'center', display: 'flex', fontWeight: 'bold', cursor: 'pointer' }}\r\n        onClick={handleClick}\r\n      >\r\n        <MarkerIcon />\r\n        <span>{subject}</span>\r\n      </div>\r\n    </Marker>\r\n  );\r\n}\r\n\r\nexport default CustomMarker;\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setSnackbar } from '../actions';\r\nimport { RootState } from '../reducers';\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function CustomSnackbar() {\r\n  const { message, open, severity } = useSelector((state: RootState) => state.snackbar);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (e?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') return;\r\n    dispatch(\r\n      setSnackbar({\r\n        message,\r\n        severity,\r\n        open: false\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n      <Alert onClose={handleClose} severity={severity}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n","import { reverseGeocode } from './fetch';\r\nimport { setMarkers } from '../actions';\r\nimport { snackbarMessage } from './snackbar';\r\nimport { Marker, User } from '../types';\r\nimport { Dispatch } from 'redux';\r\n\r\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN;\r\n\r\nexport const addNewMarkerLocally = (\r\n  user: User,\r\n  longitude: number,\r\n  latitude: number,\r\n  markers: Marker[],\r\n  dispatch: Dispatch\r\n) => {\r\n  reverseGeocode(\r\n    `https://api.mapbox.com/geocoding/v5/mapbox.places/${longitude},${latitude}.json?access_token=${MAPBOX_TOKEN}`\r\n  )\r\n    .then((res) => {\r\n      const { city, address = '---', postcode = '---', region, country } = res;\r\n      if (country && country !== 'Finland')\r\n        return snackbarMessage(\r\n          `This app is currently restricted to Finland only. Marker location: ${region}, ${country}`,\r\n          'warning',\r\n          dispatch\r\n        );\r\n\r\n      if (!city)\r\n        return snackbarMessage(\r\n          'This location is not near a city with infrastructure.',\r\n          'warning',\r\n          dispatch\r\n        );\r\n\r\n      const newMarker: Marker = {\r\n        address,\r\n        city,\r\n        description: `${address}, ${postcode}, ${city}`,\r\n        id: null,\r\n        latitude,\r\n        longitude,\r\n        postcode,\r\n        reporter: user || 'guest',\r\n        subject: 'New marker'\r\n      };\r\n\r\n      dispatch(setMarkers([...markers, newMarker]));\r\n    })\r\n    .catch((err) => snackbarMessage(err.message, 'error', dispatch));\r\n};\r\n","import React, { useEffect, useMemo } from 'react';\nimport ToolDrawer from './components/ToolDrawer';\nimport MapGL from 'react-map-gl';\nimport CustomAppBar from './components/CustomAppBar';\nimport ReportDialog from './components/ReportDialog';\nimport UserDialog from './components/UserDialog';\nimport CustomMarker from './components/CustomMarker';\nimport CustomSnackbar from './components/CustomSnackbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setViewport, setMarkers, hideSpinner } from './actions';\nimport { getAllReports } from './utils/fetch';\nimport { snackbarMessage } from './utils/snackbar';\nimport { addNewMarkerLocally } from './utils/markers';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './App.css';\nimport { makeStyles, ThemeOptions } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { purple, blue } from '@material-ui/core/colors';\n\nimport { Marker, Viewport } from './types';\nimport { RootState } from './reducers';\n\nexport const drawerWidth: number = 260;\n\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN;\n\nconst initialTheme: ThemeOptions = {\n  palette: {\n    primary: purple,\n    secondary: blue,\n    type: 'light'\n  }\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex'\n  },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    paddingTop: '56px',\n    overflow: 'hidden'\n  },\n  addToolSelected: {\n    '&>div': {\n      cursor: 'pointer !important'\n    }\n  }\n}));\n\nfunction App() {\n  const muiTheme = createMuiTheme(initialTheme);\n  const classes = useStyles();\n  const user = useSelector((state: RootState) => state.user);\n  const markers = useSelector((state: RootState) => state.markers);\n  const viewport = useSelector((state: RootState) => state.viewport);\n  const tool = useSelector((state: RootState) => state.tool);\n  const spinner = useSelector((state: RootState) => state.spinner);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getAllReports()\n      .then((reports) => dispatch(setMarkers(reports)))\n      .catch((err) => snackbarMessage(err.message, 'warning', dispatch))\n      .finally(() => dispatch(hideSpinner()));\n  }, [dispatch]);\n\n  const handleViewportChange = (viewport: Viewport) => dispatch(setViewport(viewport));\n  const handleClick = async (e: any) => {\n    if (tool === 'add') {\n      // Prioritize edit over add on existing markers\n      if (e.target.tagName !== 'DIV') return;\n      addNewMarkerLocally(user, e.lngLat[0], e.lngLat[1], markers, dispatch);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={muiTheme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <ToolDrawer />\n        <CustomAppBar />\n        <main\n          className={\n            tool === 'add' ? `${classes.content} ${classes.addToolSelected}` : classes.content\n          }\n        >\n          <MapGL\n            {...viewport}\n            width=\"100%\"\n            height=\"100%\"\n            mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n            onViewportChange={handleViewportChange}\n            mapboxApiAccessToken={MAPBOX_TOKEN}\n            onNativeClick={handleClick}\n          >\n            {useMemo(\n              () =>\n                markers.map((m: Marker, i: number) => (\n                  <CustomMarker\n                    key={i}\n                    localIndex={i}\n                    address={m.address}\n                    city={m.city}\n                    postcode={m.postcode}\n                    dbIndex={m.id}\n                    longitude={m.longitude}\n                    latitude={m.latitude}\n                    subject={m.subject}\n                    description={m.description}\n                    reporter={m.reporter}\n                    offsetTop={-24}\n                    offsetLeft={-12}\n                  />\n                )),\n              [markers]\n            )}\n          </MapGL>\n          {/* Only rerender when component's state via useSelector changes */}\n          {useMemo(() => <ReportDialog />, [])}\n          {useMemo(() => <UserDialog />, [])}\n          {useMemo(() => <CustomSnackbar />, [])}\n          {spinner && <CircularProgress color=\"secondary\" style={{position: 'absolute', left: '50%', top: '50%', marginLeft: '-20px', marginTop: '-20px'}} />}\n        </main>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { Action } from 'redux';\r\n\r\nconst drawerReducer = (state: boolean = false, action: Action): boolean => {\r\n    switch(action.type) {\r\n        case 'OPEN-DRAWER':\r\n            return true;\r\n        case 'CLOSE-DRAWER':\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default drawerReducer;","import { Viewport, PayloadAction } from '../types';\r\n\r\nconst initialState: Viewport = {\r\n    longitude: 26.2,\r\n    latitude: 62.1,\r\n    zoom: 4.9,\r\n    bearing: 0,\r\n    pitch: 0\r\n}\r\n\r\nconst viewportReducer = (state: Viewport = initialState, action: PayloadAction<Viewport>): Viewport => {\r\n    switch (action.type) {\r\n        case 'VIEWPORT':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default viewportReducer;","import { Tool, PayloadAction } from '../types';\r\n\r\nconst toolReducer = (state: Tool = 'edit', action: PayloadAction<Tool>): Tool => {\r\n    switch (action.type) {\r\n        case 'TOOL':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default toolReducer;","import { Marker, PayloadAction } from '../types';\r\n\r\nconst markerReducer = (state: Marker[] = [], action: PayloadAction<Marker[]>): Marker[] => {\r\n    switch (action.type) {\r\n        case 'MARKERS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default markerReducer;","import { PayloadAction, Snackbar } from '../types';\r\n\r\nconst initialState: Snackbar = { message: '', open: false, severity: undefined };\r\n\r\nconst snackbarReducer = (\r\n  state = initialState,\r\n  action: PayloadAction<Snackbar>\r\n): Snackbar => {\r\n  switch (action.type) {\r\n    case 'SNACKBAR':\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default snackbarReducer;\r\n","import { Action } from 'redux';\r\n\r\nconst spinnerReducer = (state: boolean = true, action: Action): boolean => {\r\n    switch(action.type) {\r\n        case 'SHOW-SPINNER':\r\n            return true;\r\n        case 'HIDE-SPINNER':\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default spinnerReducer;","import { PayloadAction, User } from \"../types\";\r\n\r\nconst userReducer = (state: User = null, action: PayloadAction<User>): User => {\r\n    switch (action.type) {\r\n        case 'USER':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { ReportDialog, UserDialog, PayloadAction } from '../types';\r\n\r\nconst reportDialogInitialState: ReportDialog = {\r\n  open: false,\r\n  address: '',\r\n  city: '',\r\n  postcode: '',\r\n  subject: '',\r\n  description: '',\r\n  reporter: '',\r\n  markerIndex: 0,\r\n  latitude: 0,\r\n  longitude: 0\r\n};\r\n\r\nexport const reportDialogReducer = (\r\n  state = reportDialogInitialState,\r\n  action: PayloadAction<ReportDialog>\r\n): ReportDialog => {\r\n  switch (action.type) {\r\n    case 'REPORT-DIALOG':\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst userDialogInitialState: UserDialog = {\r\n  open: false,\r\n  mode: 'login'\r\n}\r\n\r\nexport const userDialogReducer = (\r\n  state = userDialogInitialState,\r\n  action: PayloadAction<UserDialog>\r\n): UserDialog => {\r\n  switch (action.type) {\r\n    case 'USER-DIALOG':\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import drawerReducer from './drawer';\r\nimport viewportReducer from './viewport';\r\nimport toolReducer from './tool';\r\nimport markerReducer from './markers';\r\nimport snackbarReducer from './snackbar';\r\nimport spinnerReducer from './spinner';\r\nimport userReducer from './user';\r\nimport { reportDialogReducer, userDialogReducer } from './dialog';\r\n\r\nimport { combineReducers, Action } from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n  reportDialog: reportDialogReducer,\r\n  userDialog: userDialogReducer,\r\n  drawerIsOpen: drawerReducer,\r\n  markers: markerReducer,\r\n  snackbar: snackbarReducer,\r\n  spinner: spinnerReducer,\r\n  tool: toolReducer,\r\n  viewport: viewportReducer,\r\n  user: userReducer\r\n});\r\n\r\nexport const rootReducer = (state: any, action: Action) => {\r\n  if (action.type === 'RESET') {\r\n    state = undefined;\r\n  }\r\n  return allReducers(state, action);\r\n};\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { createStore } from 'redux';\r\nimport { rootReducer } from './reducers';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport Amplify from '@aws-amplify/core';\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: \"us-east-1\",\n    userPoolId: \"us-east-1_i2BfhDyVj\",\n    userPoolWebClientId: \"692191f4kvott1ltrs7i5t4bsi\"\n  }\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}