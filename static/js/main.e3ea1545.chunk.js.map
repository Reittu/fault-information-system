{"version":3,"sources":["components/AutosuggestWrapper.js","actions/index.js","components/CustomAppBar.js","components/ToolGroup.js","components/ToolDrawer.js","utils/fetch.js","components/CustomMarker.js","components/CustomDialog.js","App.js","reducers/drawer.js","reducers/viewport.js","reducers/tool.js","reducers/markers.js","reducers/index.js","reducers/dialog.js","index.js"],"names":["debounceTimer","setViewport","payload","type","setMarkers","MAPBOX_TOKEN","process","getSuggestions","value","a","inputValue","trim","toLowerCase","length","queryPlaces","query","fetch","response","json","data","features","AutosuggestWrapper","props","useState","suggestions","setSuggestions","setValue","viewport","useSelector","state","dispatch","useDispatch","useEffect","clearTimeout","setTimeout","style","alignItems","display","Autocomplete","freeSolo","flex","onInputChange","event","newValue","options","renderInput","params","TextField","label","margin","variant","getOptionLabel","option","place_name","renderOption","onClick","longitude","Number","center","latitude","zoom","useStyles","makeStyles","theme","appBar","zIndex","drawer","appBarShift","marginLeft","drawerWidth","width","menuButton","marginRight","hide","opacity","searchBox","paddingTop","paddingBottom","padding","color","transform","borderColor","toolbar","justifyContent","SearchAppBar","classes","drawerIsOpen","AppBar","position","className","clsx","Toolbar","IconButton","aria-label","edge","Typography","noWrap","buttonGroup","flexDirection","toggleButton","textTransform","listIcon","minWidth","ToolGroup","tool","ToggleButtonGroup","size","exclusive","onChange","e","val","ToggleButton","title","Button","navigator","geolocation","getCurrentPosition","pos","coords","bearing","pitch","alert","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","mixins","ToolDrawer","useTheme","Drawer","paper","direction","API_URL","fetchOptions","bodyData","method","headers","body","JSON","stringify","fetchBase","inputData","callback","errorHandler","error","result","queryData","parse","message","undefined","reverseGeocode","apiQueryUrl","placeDataArray","filter","x","place_type","split","city","region","country","addressDataArray","address","postcodeDataArray","postcode","text","CustomMarker","description","offsetLeft","offsetTop","reporter","subject","markerIndex","dbIndex","markers","fontWeight","cursor","updateMarkersLocally","newMarkers","marker","i","window","confirm","deleteReport","id","res","resultMessage","recordsets","CustomDialog","dialogIsOpen","dialogContent","setSubject","setDescription","editForm","useRef","handleClose","requestSubmit","current","handleSubmit","preventDefault","reportValidity","map","updateReport","insertReport","Dialog","onEnter","open","onClose","aria-labelledby","DialogTitle","DialogContent","Box","pb","mb","ref","onSubmit","disabled","all","autoFocus","fullWidth","target","inputProps","minLength","maxLength","required","multiline","rows","DialogActions","initialTheme","palette","primary","purple","secondary","blue","root","content","flexGrow","height","overflow","addToolSelected","App","muiTheme","createMuiTheme","getAllReports","reports","recordset","handleClick","tagName","lngLat","newPoint","ThemeProvider","CssBaseline","mapStyle","onViewportChange","mapboxApiAccessToken","onMouseDown","React","useCallback","p","key","drawerReducer","action","initialState","viewportReducer","toolReducer","markerReducer","allReducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3ea1545.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setViewport } from '../actions';\r\n\r\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN;\r\nlet debounceTimer;\r\n\r\nconst getSuggestions = async value => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    return await inputValue.length < 2 ? [] : queryPlaces(value);\r\n};\r\n\r\nasync function queryPlaces(query) {\r\n    const response = await fetch('https://api.mapbox.com/geocoding/v5/mapbox.places/' + query + '.json?access_token=' + MAPBOX_TOKEN);\r\n    const data = await response.json();\r\n    return data.features || [];\r\n}\r\n\r\nfunction AutosuggestWrapper(props) {\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [value, setValue] = useState('');\r\n\r\n    const viewport = useSelector(state => state.viewport);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        async function asyncSet() {\r\n            setSuggestions(await getSuggestions(value));\r\n        }\r\n        clearTimeout(debounceTimer);\r\n        debounceTimer = setTimeout(asyncSet, 300);\r\n    }, [value]);\r\n\r\n    return (\r\n        <div style={{ alignItems: 'center', display: 'flex'}}>\r\n            <SearchIcon />\r\n            <Autocomplete\r\n                freeSolo\r\n                style={{flex: 1}}\r\n                onInputChange={(event, newValue) => setValue(newValue)}\r\n                options={suggestions}\r\n                renderInput={params => (\r\n                    <TextField {...params} label=\"Search for a location...\" margin=\"normal\" variant=\"outlined\" />\r\n                )}\r\n                getOptionLabel={option => option.place_name}\r\n                renderOption={option => {\r\n                    return (\r\n                        <div onClick={() => {\r\n                            dispatch(setViewport({\r\n                                ...viewport,\r\n                                longitude: Number(option.center[0]),\r\n                                latitude: Number(option.center[1]),\r\n                                zoom: 16\r\n                            }))\r\n                        }}>\r\n                            {option.place_name}\r\n                        </div>\r\n                    );\r\n                }}\r\n            />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AutosuggestWrapper;","\r\nexport const openDrawer = () => ({ type: 'OPEN-DRAWER' });\r\nexport const closeDrawer = () => ({ type: 'CLOSE-DRAWER' });\r\nexport const openDialog = () => ({ type: 'OPEN-DIALOG' });\r\nexport const closeDialog = () => ({ type: 'CLOSE-DIALOG' });\r\n\r\nexport const setTool = (payload) => {\r\n    return {\r\n        type: 'TOOL',\r\n        payload\r\n    }\r\n};\r\n\r\nexport const setViewport = (payload) => {\r\n    return {\r\n        type: 'VIEWPORT',\r\n        payload\r\n    }\r\n};\r\n\r\nexport const setDialogContent = (payload) => {\r\n    return {\r\n        type: 'SET-DIALOG',\r\n        payload\r\n    }\r\n};\r\n\r\nexport const setMarkers = (payload) => {\r\n    return {\r\n        type: 'SET-MARKERS',\r\n        payload\r\n    }\r\n};","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport clsx from 'clsx';\r\nimport AutosuggestWrapper from './AutosuggestWrapper';\r\nimport { drawerWidth } from '../App.js';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { openDrawer, closeDrawer } from '../actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        opacity: .5,\r\n    },\r\n    searchBox: {\r\n        width: '300px',\r\n        '& .MuiFormControl-root': {\r\n            margin: '0 0 0 5px'\r\n        },\r\n        '& .MuiInputBase-root': {\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        },\r\n        '& .MuiInputLabel-outlined': {\r\n            padding: 0,\r\n            color: '#fff',\r\n            transform: 'translate(14px, 12px) scale(1)'\r\n        },\r\n        '& .MuiInputLabel-shrink': {\r\n            transform: 'translate(14px, -6px) scale(0.75)'\r\n        },\r\n        '& .MuiTextField': {\r\n            color: '#fff'\r\n        },\r\n        '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n            borderColor: '#fff'\r\n        }\r\n    },\r\n    toolbar: {\r\n        justifyContent: 'space-between'\r\n    },\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n    const classes = useStyles();\r\n    const drawerIsOpen = useSelector(state => state.drawerIsOpen);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: drawerIsOpen,\r\n            })}\r\n        >\r\n            <Toolbar className={classes.toolbar}>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={drawerIsOpen ? () => dispatch(closeDrawer()) : () => dispatch(openDrawer())}\r\n                    edge=\"start\"\r\n                    className={clsx(classes.menuButton, {\r\n                        [classes.hide]: drawerIsOpen,\r\n                    })}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" noWrap>Fault Information System</Typography>\r\n                <div className={classes.searchBox}>\r\n                    <AutosuggestWrapper />\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddLocationIcon from '@material-ui/icons/AddLocation';\r\nimport EditLocationIcon from '@material-ui/icons/EditLocation';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setTool, setViewport } from '../actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    buttonGroup: {\r\n        flexDirection: 'column'\r\n    },\r\n    toggleButton: {\r\n        justifyContent: 'flex-start',\r\n        textTransform: 'none'\r\n    },\r\n    listIcon: {\r\n        minWidth: '56px',\r\n        padding: '0 16px',\r\n        marginRight: '12px'\r\n    }\r\n}));\r\n\r\nexport default function ToolGroup() {\r\n    const classes = useStyles();\r\n    const tool = useSelector(state => state.tool);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (e, val) => dispatch(setTool(val));\r\n\r\n    const centerGPS = () => {\r\n        if (!navigator.geolocation) {\r\n            alert(\"Your browser does not support GeoLocation.\");\r\n        } else {\r\n            navigator.geolocation.getCurrentPosition(pos => {\r\n                if (pos.coords) {\r\n                    dispatch(setViewport({\r\n                        longitude: pos.coords.longitude,\r\n                        latitude: pos.coords.latitude,\r\n                        zoom: 16,\r\n                        bearing: 0,\r\n                        pitch: 0,\r\n                    }))\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToggleButtonGroup className={classes.buttonGroup} size=\"small\" value={tool} exclusive onChange={handleChange}>\r\n                <ToggleButton className={classes.toggleButton} value=\"add\" title=\"Report new faults\">\r\n                    <AddLocationIcon className={classes.listIcon} />\r\n                    <Typography variant=\"body1\">Report a new fault</Typography>\r\n                </ToggleButton>\r\n                <ToggleButton className={classes.toggleButton} value=\"edit\" title=\"Edit existing faults\">\r\n                    <EditLocationIcon className={classes.listIcon} />\r\n                    <Typography variant=\"body1\">Edit submitted faults</Typography>\r\n                </ToggleButton>\r\n                <ToggleButton className={classes.toggleButton} value=\"delete\" title=\"Remove faults\">\r\n                    <DeleteIcon className={classes.listIcon} />\r\n                    <Typography variant=\"body1\">Delete faults</Typography>\r\n                </ToggleButton>\r\n                <ToggleButton className={classes.toggleButton} value=\"review\" title=\"Review faults in detail\">\r\n                    <NotListedLocationIcon className={classes.listIcon} />\r\n                    <Typography variant=\"body1\">Review faults</Typography>\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n            <Button className={classes.toggleButton} onClick={centerGPS} title=\"Center map to your location\">\r\n                <MyLocationIcon className={classes.listIcon} />\r\n                <Typography variant=\"body1\">Center to your location</Typography>\r\n            </Button>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ToolGroup from './ToolGroup';\r\nimport { drawerWidth } from '../App.js';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { closeDrawer } from '../actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerClose: {\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    buttonGroup: {\r\n        flexDirection: 'column'\r\n    },\r\n    toggleButton: {\r\n        justifyContent: 'flex-start',\r\n        textTransform: 'none'\r\n    },\r\n    listIcon: {\r\n        minWidth: '56px',\r\n        padding: '0 16px',\r\n        marginRight: '12px'\r\n    }\r\n}));\r\n\r\nexport default function ToolDrawer(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const drawerIsOpen = useSelector(state => state.drawerIsOpen);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: drawerIsOpen,\r\n                [classes.drawerClose]: !drawerIsOpen,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                    [classes.drawerOpen]: drawerIsOpen,\r\n                    [classes.drawerClose]: !drawerIsOpen,\r\n                }),\r\n            }}\r\n        >\r\n            <div className={classes.toolbar}>\r\n                <IconButton onClick={() => dispatch(closeDrawer())}>\r\n                    {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                </IconButton>\r\n            </div>\r\n            <ToolGroup />\r\n        </Drawer>\r\n\r\n    );\r\n}","const API_URL = 'https://ey86blceac.execute-api.us-east-1.amazonaws.com/prod/reports';\r\n\r\nconst fetchOptions = (bodyData, method) => ({\r\n    method,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(bodyData),\r\n});\r\n\r\nconst fetchBase = async (inputData, method, callback, errorHandler = error => alert(error)) => {\r\n    try {\r\n        const result = await fetch(API_URL, fetchOptions(inputData, method));\r\n        const json = await result.json();\r\n        const queryData = JSON.parse(json.body).message;\r\n        callback(queryData);\r\n    } catch (error) {\r\n        errorHandler('Request to server failed: ' + error);\r\n    }\r\n}\r\n\r\n// Async/await on wrapper functions not really necessary but allows easy promise chaining.\r\nexport async function getAllReports(callback) {\r\n    await fetchBase(undefined, 'GET', callback);\r\n}\r\n\r\nexport async function insertReport(data, callback) {\r\n    await fetchBase(data, 'POST', callback);\r\n}\r\n\r\nexport async function updateReport(data, callback) {\r\n    await fetchBase(data, 'PUT', callback);\r\n}\r\n\r\nexport async function deleteReport(data, callback) {\r\n    await fetchBase(data, 'DELETE', callback);\r\n}\r\n\r\nexport async function reverseGeocode(apiQueryUrl) {\r\n    const result = await fetch(apiQueryUrl);\r\n    const json = await result.json();\r\n\r\n    const placeDataArray = json.features.filter(x => x.place_type[0] === 'place');\r\n    if (placeDataArray.length === 0) {\r\n        alert('Marked location is not located in a country.');\r\n        return {};\r\n    }\r\n    \r\n    let [city, region, country] = placeDataArray[0].place_name.split(', ');\r\n    if (country !== 'Finland') {\r\n        alert('This app is currently restricted to Finland only. Your marker was located in: ' + region + ', ' + country);\r\n        return {};\r\n    }\r\n\r\n    let address, postcode;\r\n    const addressDataArray = json.features.filter(x => x.place_type[0] === 'address');\r\n    if (addressDataArray.length > 0) {\r\n        address = addressDataArray[0].place_name.split(', ')[0];\r\n    }\r\n    const postcodeDataArray = json.features.filter(x => x.place_type[0] === 'postcode');\r\n    if (postcodeDataArray.length > 0) {\r\n        postcode = postcodeDataArray[0].text;\r\n    }\r\n\r\n    return { city, address, postcode };\r\n}","import React from 'react';\r\nimport { Marker } from 'react-map-gl';\r\nimport MarkerIcon from '@material-ui/icons/Room';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { openDialog, setDialogContent, setMarkers } from '../actions';\r\nimport { deleteReport } from '../utils/fetch';\r\n\r\nfunction CustomMarker(props) {\r\n    const { address, city, postcode, description, latitude, longitude, offsetLeft, offsetTop, reporter, subject, markerIndex, dbIndex } = props;\r\n    const tool = useSelector(state => state.tool);\r\n    const markers = useSelector(state => state.markers);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        if (tool === 'delete') {\r\n\r\n            function updateMarkersLocally() {\r\n                const newMarkers = markers.filter((marker, i) => i === markerIndex ? false : true);\r\n                dispatch(setMarkers(newMarkers));\r\n            }\r\n\r\n            if (!dbIndex) return updateMarkersLocally();\r\n            if (reporter !== 'guest') return alert('Not authorized as guest to delete a report posted by admin.');\r\n            if (window.confirm('Delete this marker?')) {\r\n                deleteReport({ id: dbIndex }, res => {\r\n                    const resultMessage = res.recordsets[0][0].result;\r\n                    if (resultMessage === 'Success') {\r\n                        updateMarkersLocally();\r\n                    } else {\r\n                        alert('Failed to delete this report: ' + resultMessage);\r\n                    }\r\n                });\r\n            }\r\n\r\n        } else {\r\n            dispatch(setDialogContent({ address, city, postcode, subject, description, reporter, markerIndex, latitude, longitude }));\r\n            dispatch(openDialog());\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Marker latitude={latitude} longitude={longitude} offsetLeft={offsetLeft} offsetTop={offsetTop}>\r\n            <div style={{ alignItems: 'center', display: 'flex', fontWeight: 'bold', cursor: 'pointer' }} onClick={handleClick}>\r\n                <MarkerIcon /><span>{subject}</span>\r\n            </div>\r\n        </Marker>\r\n    );\r\n}\r\n\r\nexport default CustomMarker;","import React, { useState, useRef } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { closeDialog, setMarkers } from '../actions';\r\nimport { insertReport, updateReport } from '../utils/fetch';\r\n\r\nexport default function CustomDialog() {\r\n    const dialogIsOpen = useSelector(state => state.dialogIsOpen);\r\n    const dialogContent = useSelector(state => state.dialogContent);\r\n    const tool = useSelector(state => state.tool);\r\n    const markers = useSelector(state => state.markers);\r\n    const [subject, setSubject] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const dispatch = useDispatch();\r\n    const editForm = useRef(null);\r\n\r\n    const handleSetup = () => {\r\n        setSubject(dialogContent.subject);\r\n        setDescription(dialogContent.description);\r\n    }\r\n    const handleClose = () => dispatch(closeDialog());\r\n\r\n    const requestSubmit = () => {\r\n        editForm.current.requestSubmit();\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (editForm.current.reportValidity()) {\r\n            const newMarkers = markers.map((marker, i) => {\r\n                if (i === dialogContent.markerIndex) {\r\n                    const { latitude, longitude, city, postcode, address } = marker;\r\n                    if (marker.id) {\r\n                        updateReport({ id: marker.id, subject, description }, res => {\r\n                            const resultMessage = res.recordsets[0][0].result;\r\n                            if (resultMessage !== 'Success') alert('Failed to update report: ' + resultMessage);\r\n                        });\r\n                    } else {\r\n                        insertReport({ subject, description, latitude, longitude, city, postcode, address }, res => {\r\n                            let newMarkers = [...markers];\r\n                            newMarkers[i].id = Number(res.recordsets[0][0].result);\r\n                            newMarkers[i].subject = subject;\r\n                            newMarkers[i].description = description;\r\n                            dispatch(setMarkers(newMarkers));\r\n                        });\r\n                    }\r\n\r\n                    return { ...marker, subject, description };\r\n                } else return marker;\r\n            });\r\n            dispatch(setMarkers(newMarkers));\r\n            handleClose();\r\n        }\r\n    }\r\n\r\n    const reviewModeContent = () => (\r\n        <>\r\n            <DialogTitle id=\"form-dialog-title\">{subject}</DialogTitle>\r\n            <DialogContent>\r\n                <Box color=\"text.secondary\" pb=\"16px\">\r\n                    <Box mb=\"16px\">\r\n                        <Typography display=\"inline\">Reported by: </Typography>\r\n                        <Typography display=\"inline\" color=\"primary\">{dialogContent.reporter}</Typography>\r\n                    </Box>\r\n                    <Box mb=\"16px\">\r\n                        <Typography>{dialogContent.address}, {dialogContent.postcode}, {dialogContent.city}</Typography>\r\n                        <Typography>Latitude: {dialogContent.latitude}</Typography>\r\n                        <Typography>Longitude: {dialogContent.longitude}</Typography>\r\n                    </Box>\r\n                    <Typography color=\"textPrimary\">{description}</Typography>\r\n                </Box>\r\n            </DialogContent>\r\n        </>\r\n    )\r\n\r\n    const nonReviewModeContent = () => (\r\n        <>\r\n            <DialogTitle id=\"form-dialog-title\">Fault Details</DialogTitle>\r\n            <DialogContent>\r\n                <Box color=\"text.secondary\" mb=\"16px\">\r\n                    <Box mb=\"8px\">\r\n                        <Typography color=\"textSecondary\" display=\"inline\">Reported by: </Typography>\r\n                        <Typography color=\"primary\" display=\"inline\">{dialogContent.reporter}</Typography>\r\n                    </Box>\r\n                    <Typography>Set a subject text that appears in the map and a more in-depth description of the issue.</Typography>\r\n                </Box>\r\n                <form ref={editForm} onSubmit={handleSubmit}>\r\n                    <fieldset disabled={dialogContent.reporter !== 'guest' ? true : false} style={{ all: 'unset' }}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"subject\"\r\n                            label=\"Subject\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={subject}\r\n                            onChange={(e) => setSubject(e.target.value)}\r\n                            inputProps={{ minLength: 3, maxLength: 50 }}\r\n                            required\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"description\"\r\n                            label=\"Description\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                            inputProps={{ minLength: 5, maxLength: 500 }}\r\n                            multiline={true}\r\n                            rows=\"2\"\r\n                            required\r\n                        />\r\n                        <input type=\"submit\" style={{ display: 'none' }} />\r\n                    </fieldset>\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={requestSubmit} color=\"primary\" disabled={dialogContent.reporter !== 'guest' ? true : false}>\r\n                    Save\r\n                </Button>\r\n            </DialogActions>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <Dialog onEnter={handleSetup} open={dialogIsOpen} onClose={() => handleClose(false)} aria-labelledby=\"form-dialog-title\">\r\n            {tool === 'review' ? reviewModeContent() : nonReviewModeContent()}\r\n        </Dialog>\r\n    );\r\n}","import React, { useEffect } from 'react';\nimport CustomAppBar from './components/CustomAppBar';\nimport ToolDrawer from './components/ToolDrawer';\nimport MapGL from 'react-map-gl';\nimport CustomMarker from './components/CustomMarker';\nimport CustomDialog from './components/CustomDialog';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setViewport, setMarkers } from './actions';\nimport { getAllReports, reverseGeocode } from './utils/fetch';\n\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { purple, blue } from '@material-ui/core/colors';\n\nexport const drawerWidth = 260;\n\nconst initialTheme = {\n  palette: {\n    primary: purple,\n    secondary: blue,\n    type: 'light'\n  },\n}\n\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    paddingTop: '56px',\n    overflow: 'hidden'\n  },\n  addToolSelected: {\n    '&>div': {\n      cursor: 'pointer !important'\n    }\n  },\n  '@media (orientation: landscape)': {\n    content: {\n      paddingTop: '48px'\n    }\n  },\n  '@media (min-width: 600px)': {\n    content: {\n      paddingTop: '64px'\n    }\n  }\n}));\n\nfunction App() {\n  const muiTheme = createMuiTheme(initialTheme);\n  const classes = useStyles();\n  const markers = useSelector(state => state.markers);\n  const viewport = useSelector(state => state.viewport);\n  const tool = useSelector(state => state.tool);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getAllReports(reports => dispatch(setMarkers(reports.recordset)));\n  }, [dispatch]);\n\n  const handleViewportChange = (val) => dispatch(setViewport(val));\n  const handleClick = async (e) => {\n    if (tool === 'add') {\n      // Prioritize edit over add on existing markers\n      if (e.target.tagName !== 'DIV') return;\n      try {\n        const { city, address = '---', postcode = '---' } = await reverseGeocode(`https://api.mapbox.com/geocoding/v5/mapbox.places/${e.lngLat[0]},${e.lngLat[1]}.json?access_token=${MAPBOX_TOKEN}`);\n        if (!city) return;\n        const newPoint = {\n          address,\n          city,\n          description: `${address}, ${postcode}, ${city}`,\n          id: null,\n          latitude: e.lngLat[1],\n          longitude: e.lngLat[0],\n          postcode,\n          reporter: 'guest',\n          subject: 'New marker'\n        };\n        dispatch(setMarkers([...markers, newPoint]));\n      } catch (error) {\n        alert('Failed to fetch data: ' + error);\n      }\n    }\n  };\n\n  return (\n    <ThemeProvider theme={muiTheme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <ToolDrawer />\n        <CustomAppBar />\n        <main className={tool === 'add' ? `${classes.content} ${classes.addToolSelected}` : classes.content }>\n          <MapGL\n            {...viewport}\n            width=\"100%\"\n            height=\"100%\"\n            mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n            onViewportChange={handleViewportChange}\n            mapboxApiAccessToken={MAPBOX_TOKEN}\n            onMouseDown={handleClick}\n          >\n            {React.useCallback(markers.map((p, i) => (\n              <CustomMarker\n                key={i}\n                markerIndex={i}\n                address={p.address}\n                city={p.city}\n                postcode={p.postcode}\n                dbIndex={p.id}\n                longitude={p.longitude}\n                latitude={p.latitude}\n                subject={p.subject}\n                description={p.description}\n                reporter={p.reporter}\n                offsetTop={-24}\n                offsetLeft={-12}\n              />\n            )), [markers])}\n\n          </MapGL>\n          <CustomDialog />\n        </main>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const drawerReducer = (state = false, action) => {\r\n    switch(action.type) {\r\n        case 'OPEN-DRAWER':\r\n            return true;\r\n        case 'CLOSE-DRAWER':\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default drawerReducer;","const initialState = {\r\n    longitude: 26.2,\r\n    latitude: 62.1,\r\n    zoom: 4.9,\r\n    bearing: 0,\r\n    pitch: 0\r\n}\r\n\r\nconst viewportReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'VIEWPORT':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default viewportReducer;","const toolReducer = (state = 'edit', action) => {\r\n    switch (action.type) {\r\n        case 'TOOL':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default toolReducer;","const markerReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SET-MARKERS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default markerReducer;","import drawerReducer from './drawer';\r\nimport viewportReducer from './viewport';\r\nimport toolReducer from './tool';\r\nimport markerReducer from './markers';\r\nimport { dialogStateReducer, dialogContentReducer } from './dialog';\r\n\r\nimport { combineReducers } from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n    drawerIsOpen: drawerReducer,\r\n    viewport: viewportReducer,\r\n    tool: toolReducer,\r\n    dialogIsOpen: dialogStateReducer,\r\n    dialogContent: dialogContentReducer,\r\n    markers: markerReducer,\r\n});\r\n\r\n// Required for state reset\r\nexport const rootReducer = (state, action) => {\r\n    if (action.type === 'RESET') {\r\n        state = undefined;\r\n    }\r\n    return allReducers(state, action)\r\n}","export const dialogStateReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'OPEN-DIALOG':\r\n            return true;\r\n        case 'CLOSE-DIALOG':\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const dialogContentReducer = (state = { address: '', city: '',  postcode: '', subject: '', description: '', reporter: '', markerIndex: 0, latitude: 0, longitude: 0 }, action) => {\r\n    switch (action.type) {\r\n        case 'SET-DIALOG':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { rootReducer } from './reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}