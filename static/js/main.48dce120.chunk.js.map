{"version":3,"sources":["actions/index.ts","components/ToolGroup.tsx","components/ToolDrawer.tsx","components/AutosuggestWrapper.tsx","components/CustomAppBar.tsx","utils/fetch.ts","components/CustomDialog.tsx","components/CustomMarker.tsx","components/CustomSnackbar.tsx","utils/markers.ts","App.tsx","reducers/drawer.ts","reducers/viewport.ts","reducers/tool.ts","reducers/markers.ts","reducers/snackbar.ts","reducers/spinner.ts","reducers/dialog.ts","reducers/index.ts","index.tsx"],"names":["setViewport","payload","type","setMarkers","setSnackbar","useStyles","makeStyles","theme","buttonGroup","flexDirection","toggleButton","justifyContent","textTransform","listIcon","minWidth","padding","marginRight","ToolGroup","classes","tool","useSelector","state","dispatch","useDispatch","ToggleButtonGroup","className","size","value","exclusive","onChange","e","val","ToggleButton","title","Typography","variant","Button","onClick","navigator","geolocation","getCurrentPosition","pos","coords","longitude","latitude","zoom","bearing","pitch","alert","drawer","width","drawerWidth","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","display","alignItems","mixins","ToolDrawer","useTheme","drawerIsOpen","Drawer","clsx","paper","IconButton","direction","debounceTimer","MAPBOX_TOKEN","process","getSuggestions","a","inputValue","trim","toLowerCase","length","queryPlaces","query","fetch","response","json","data","features","AutosuggestWrapper","useState","suggestions","setSuggestions","setValue","viewport","useEffect","clearTimeout","window","setTimeout","style","Autocomplete","freeSolo","flex","onInputChange","event","newValue","options","renderInput","params","TextField","label","margin","getOptionLabel","option","place_name","renderOption","Number","center","appBar","zIndex","appBarShift","marginLeft","menuButton","hide","opacity","searchBox","paddingTop","paddingBottom","color","transform","borderColor","SearchAppBar","AppBar","position","Toolbar","aria-label","edge","noWrap","fetchOptions","method","bodyData","headers","body","JSON","stringify","fetchBase","inputData","result","parse","message","recordset","isNaN","Error","apiQueryUrl","placeDataArray","filter","feature","place_type","split","city","region","country","addressDataArray","address","postcodeDataArray","postcode","text","CustomDialog","dialogIsOpen","dialogContent","markers","subject","setSubject","description","setDescription","editForm","useRef","handleClose","requestSubmit","current","handleSubmit","preventDefault","newMarkers","map","marker","i","markerIndex","reporter","dbIndex","id","updateReport","then","open","severity","catch","err","finally","insertReport","Dialog","onEnter","onClose","aria-labelledby","DialogTitle","DialogContent","Box","pb","mb","ref","onSubmit","disabled","all","autoFocus","fullWidth","target","inputProps","minLength","maxLength","required","multiline","rows","DialogActions","CustomMarker","props","offsetLeft","offsetTop","localIndex","fontWeight","cursor","deleteMarkerLocally","confirm","deleteReport","Alert","elevation","CustomSnackbar","snackbar","reason","Snackbar","autoHideDuration","addNewMarkerLocally","reverseGeocode","res","newMarker","initialTheme","palette","primary","purple","secondary","blue","root","content","flexGrow","height","overflow","addToolSelected","App","muiTheme","createMuiTheme","spinner","getAllReports","reports","handleClick","tagName","lngLat","ThemeProvider","CssBaseline","mapStyle","onViewportChange","mapboxApiAccessToken","onMouseDown","useMemo","m","key","CircularProgress","left","top","marginTop","drawerReducer","action","initialState","viewportReducer","toolReducer","markerReducer","undefined","snackbarReducer","spinnerReducer","allReducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48dce120.chunk.js","sourcesContent":["import { Action } from 'redux';\r\nimport { DialogContent, Marker, Tool, Viewport, PayloadAction, Snackbar } from '../types';\r\n\r\nexport const openDrawer = (): Action => ({ type: 'OPEN-DRAWER' });\r\nexport const closeDrawer = (): Action => ({ type: 'CLOSE-DRAWER' });\r\nexport const openDialog = (): Action => ({ type: 'OPEN-DIALOG' });\r\nexport const closeDialog = (): Action => ({ type: 'CLOSE-DIALOG' });\r\nexport const showSpinner = (): Action => ({ type: 'SHOW-SPINNER' });\r\nexport const hideSpinner = (): Action => ({ type: 'HIDE-SPINNER' });\r\n\r\nexport const setTool = (payload: Tool): PayloadAction<Tool> => {\r\n    return {\r\n        type: 'TOOL',\r\n        payload\r\n    }\r\n};\r\n\r\nexport const setViewport = (payload: Viewport): PayloadAction<Viewport> => {\r\n    return {\r\n        type: 'VIEWPORT',\r\n        payload\r\n    }\r\n};\r\n\r\nexport const setDialogContent = (payload: DialogContent): PayloadAction<DialogContent> => {\r\n    return {\r\n        type: 'SET-DIALOG',\r\n        payload\r\n    }\r\n};\r\n\r\nexport const setMarkers = (payload: Marker[]): PayloadAction<Marker[]> => {\r\n    return {\r\n        type: 'SET-MARKERS',\r\n        payload\r\n    }\r\n};\r\n\r\nexport const setSnackbar = (payload: Snackbar): PayloadAction<Snackbar> => {\r\n    return {\r\n        type: 'SET-SNACKBAR',\r\n        payload\r\n    }\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddLocationIcon from '@material-ui/icons/AddLocation';\r\nimport EditLocationIcon from '@material-ui/icons/EditLocation';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setTool, setViewport } from '../actions';\r\nimport { RootState } from '../reducers';\r\nimport { Tool } from '../types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    buttonGroup: {\r\n        flexDirection: 'column'\r\n    },\r\n    toggleButton: {\r\n        justifyContent: 'flex-start',\r\n        textTransform: 'none'\r\n    },\r\n    listIcon: {\r\n        minWidth: '56px',\r\n        padding: '0 16px',\r\n        marginRight: '12px'\r\n    }\r\n}));\r\n\r\nexport default function ToolGroup() {\r\n    const classes = useStyles();\r\n    const tool = useSelector((state: RootState) => state.tool);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (e: any, val: Tool) => dispatch(setTool(val));\r\n\r\n    const centerGPS = () => {\r\n        if (!navigator.geolocation) {\r\n            alert('Your browser does not support GeoLocation.');\r\n        } else {\r\n            navigator.geolocation.getCurrentPosition(pos => {\r\n                if (pos.coords) {\r\n                    dispatch(setViewport({\r\n                        longitude: pos.coords.longitude,\r\n                        latitude: pos.coords.latitude,\r\n                        zoom: 16,\r\n                        bearing: 0,\r\n                        pitch: 0,\r\n                    }))\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToggleButtonGroup className={classes.buttonGroup} size='small' value={tool} exclusive onChange={handleChange}>\r\n                <ToggleButton className={classes.toggleButton} value='add' title='Report new faults'>\r\n                    <AddLocationIcon className={classes.listIcon} />\r\n                    <Typography variant='body1'>Report a new fault</Typography>\r\n                </ToggleButton>\r\n                <ToggleButton className={classes.toggleButton} value='edit' title='Edit existing faults'>\r\n                    <EditLocationIcon className={classes.listIcon} />\r\n                    <Typography variant='body1'>Edit submitted faults</Typography>\r\n                </ToggleButton>\r\n                <ToggleButton className={classes.toggleButton} value='delete' title='Remove faults'>\r\n                    <DeleteIcon className={classes.listIcon} />\r\n                    <Typography variant='body1'>Delete faults</Typography>\r\n                </ToggleButton>\r\n                <ToggleButton className={classes.toggleButton} value='review' title='Review faults in detail'>\r\n                    <NotListedLocationIcon className={classes.listIcon} />\r\n                    <Typography variant='body1'>Review faults</Typography>\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n            <Button className={classes.toggleButton} onClick={centerGPS} title='Center map to your location'>\r\n                <MyLocationIcon className={classes.listIcon} />\r\n                <Typography variant='body1'>Center to your location</Typography>\r\n            </Button>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ToolGroup from './ToolGroup';\r\nimport { drawerWidth } from '../App';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { closeDrawer } from '../actions';\r\nimport { RootState } from '../reducers';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerClose: {\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    buttonGroup: {\r\n        flexDirection: 'column'\r\n    },\r\n    toggleButton: {\r\n        justifyContent: 'flex-start',\r\n        textTransform: 'none'\r\n    },\r\n    listIcon: {\r\n        minWidth: '56px',\r\n        padding: '0 16px',\r\n        marginRight: '12px'\r\n    }\r\n}));\r\n\r\nexport default function ToolDrawer() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const drawerIsOpen = useSelector((state: RootState) => state.drawerIsOpen);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Drawer\r\n            variant='permanent'\r\n            className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: drawerIsOpen,\r\n                [classes.drawerClose]: !drawerIsOpen,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                    [classes.drawerOpen]: drawerIsOpen,\r\n                    [classes.drawerClose]: !drawerIsOpen,\r\n                }),\r\n            }}\r\n        >\r\n            <div className={classes.toolbar}>\r\n                <IconButton onClick={() => dispatch(closeDrawer())}>\r\n                    {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                </IconButton>\r\n            </div>\r\n            <ToolGroup />\r\n        </Drawer>\r\n\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setViewport } from '../actions';\r\nimport { RootState } from '../reducers';\r\nimport { GeoJSONFeature, GeoJSONFeatureCollection } from '../types';\r\n\r\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN;\r\nlet debounceTimer: number;\r\n\r\nconst getSuggestions = async (value: string) => {\r\n  const inputValue = value.trim().toLowerCase();\r\n  return inputValue.length < 2 ? [] : queryPlaces(value);\r\n};\r\n\r\nasync function queryPlaces(query: string) {\r\n  const response = await fetch(\r\n    'https://api.mapbox.com/geocoding/v5/mapbox.places/' +\r\n      query +\r\n      '.json?access_token=' +\r\n      MAPBOX_TOKEN\r\n  );\r\n  const data: GeoJSONFeatureCollection = await response.json();\r\n  return data.features || [];\r\n}\r\n\r\nfunction AutosuggestWrapper() {\r\n  const [suggestions, setSuggestions] = useState<GeoJSONFeature[]>([]);\r\n  const [value, setValue] = useState('');\r\n\r\n  const viewport = useSelector((state: RootState) => state.viewport);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    async function asyncSet() {\r\n      setSuggestions(await getSuggestions(value));\r\n    }\r\n    clearTimeout(debounceTimer);\r\n    debounceTimer = window.setTimeout(asyncSet, 300);\r\n  }, [value]);\r\n\r\n  return (\r\n    <div style={{ alignItems: 'center', display: 'flex' }}>\r\n      <SearchIcon />\r\n      <Autocomplete\r\n        freeSolo\r\n        style={{ flex: 1 }}\r\n        onInputChange={(event, newValue) => setValue(newValue)}\r\n        options={suggestions}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Search for a location...\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n          />\r\n        )}\r\n        getOptionLabel={(option) => option.place_name}\r\n        renderOption={(option) => {\r\n          return (\r\n            <div\r\n              onClick={() => {\r\n                dispatch(\r\n                  setViewport({\r\n                    ...viewport,\r\n                    longitude: Number(option.center[0]),\r\n                    latitude: Number(option.center[1]),\r\n                    zoom: 16\r\n                  })\r\n                );\r\n              }}\r\n            >\r\n              {option.place_name}\r\n            </div>\r\n          );\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AutosuggestWrapper;\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport clsx from 'clsx';\r\nimport AutosuggestWrapper from './AutosuggestWrapper';\r\nimport { drawerWidth } from '../App';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { openDrawer, closeDrawer } from '../actions';\r\nimport { RootState } from '../reducers';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        opacity: .5,\r\n    },\r\n    searchBox: {\r\n        width: '300px',\r\n        '& .MuiFormControl-root': {\r\n            margin: '0 0 0 5px'\r\n        },\r\n        '& .MuiInputBase-root': {\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        },\r\n        '& .MuiInputLabel-outlined': {\r\n            padding: 0,\r\n            color: '#fff',\r\n            transform: 'translate(14px, 12px) scale(1)'\r\n        },\r\n        '& .MuiInputLabel-shrink': {\r\n            transform: 'translate(14px, -6px) scale(0.75)'\r\n        },\r\n        '& .MuiTextField': {\r\n            color: '#fff'\r\n        },\r\n        '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n            borderColor: '#fff'\r\n        }\r\n    },\r\n    toolbar: {\r\n        justifyContent: 'space-between'\r\n    },\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n    const classes = useStyles();\r\n    const drawerIsOpen = useSelector((state: RootState) => state.drawerIsOpen);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <AppBar\r\n            position='fixed'\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: drawerIsOpen,\r\n            })}\r\n        >\r\n            <Toolbar className={classes.toolbar}>\r\n                <IconButton\r\n                    color='inherit'\r\n                    aria-label='open drawer'\r\n                    onClick={drawerIsOpen ? () => dispatch(closeDrawer()) : () => dispatch(openDrawer())}\r\n                    edge='start'\r\n                    className={clsx(classes.menuButton, {\r\n                        [classes.hide]: drawerIsOpen,\r\n                    })}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant='h6' noWrap>Fault Information System</Typography>\r\n                <div className={classes.searchBox}>\r\n                    <AutosuggestWrapper />\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import {\r\n  HTTPMethod,\r\n  ReportBodyInsert,\r\n  ReportBodyUpdate,\r\n  ReportBodyDelete,\r\n  QueryGetResult,\r\n  QuerySetResult,\r\n  GeoJSONFeatureCollection\r\n} from '../types';\r\n\r\nconst API_URL = 'https://ey86blceac.execute-api.us-east-1.amazonaws.com/prod/reports';\r\n\r\nconst fetchOptions = (\r\n  method: HTTPMethod,\r\n  bodyData?: ReportBodyInsert | ReportBodyUpdate | ReportBodyDelete\r\n) => ({\r\n  method,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n  body: JSON.stringify(bodyData)\r\n});\r\n\r\nconst fetchBase = async (\r\n  method: HTTPMethod,\r\n  inputData?: ReportBodyInsert | ReportBodyUpdate | ReportBodyDelete\r\n) => {\r\n  const result = await fetch(API_URL, fetchOptions(method, inputData));\r\n  const json = await result.json();\r\n  return JSON.parse(json.body).message;\r\n};\r\n\r\nexport async function getAllReports() {\r\n  const result: QueryGetResult = await fetchBase('GET');\r\n  return result.recordset;\r\n}\r\n\r\nexport async function insertReport(data: ReportBodyInsert) {\r\n  const result: QuerySetResult = await fetchBase('POST', data);\r\n  if (isNaN(result.recordset[0].result as any))\r\n    throw Error('Failed to insert: ' + result.recordset[0].result);\r\n  return result.recordset[0].result;\r\n}\r\n\r\nexport async function updateReport(data: ReportBodyUpdate) {\r\n  const result: QuerySetResult = await fetchBase('PUT', data);\r\n  if (result.recordset[0].result !== 'Success')\r\n    throw Error('Failed to update: ' + result.recordset[0].result);\r\n  return result.recordset[0].result;\r\n}\r\n\r\nexport async function deleteReport(data: ReportBodyDelete) {\r\n  const result: QuerySetResult = await fetchBase('DELETE', data);\r\n  if (result.recordset[0].result !== 'Success')\r\n    throw Error('Failed to delete: ' + result.recordset[0].result);\r\n  return result.recordset[0].result;\r\n}\r\n\r\nexport async function reverseGeocode(apiQueryUrl: string) {\r\n  const result = await fetch(apiQueryUrl);\r\n  const json: GeoJSONFeatureCollection = await result.json();\r\n\r\n  let city, region, country, address, postcode;\r\n\r\n  const placeDataArray = json.features.filter((feature) => feature.place_type[0] === 'place');\r\n  if (placeDataArray.length > 0) [city, region, country] = placeDataArray[0].place_name.split(', ');\r\n\r\n  const addressDataArray = json.features.filter((feature) => feature.place_type[0] === 'address');\r\n  if (addressDataArray.length > 0) address = addressDataArray[0].place_name.split(', ')[0];\r\n\r\n  const postcodeDataArray = json.features.filter((feature) => feature.place_type[0] === 'postcode');\r\n  if (postcodeDataArray.length > 0) postcode = postcodeDataArray[0].text;\r\n\r\n  return { city, region, country, address, postcode };\r\n}\r\n","import React, { useState, useRef, SyntheticEvent } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { closeDialog, setMarkers, setSnackbar, showSpinner, hideSpinner } from '../actions';\r\nimport { insertReport, updateReport } from '../utils/fetch';\r\nimport { Marker } from '../types';\r\nimport { RootState } from '../reducers';\r\n\r\nexport default function CustomDialog() {\r\n  const dialogIsOpen = useSelector((state: RootState) => state.dialogIsOpen);\r\n  const dialogContent = useSelector((state: RootState) => state.dialogContent);\r\n  const tool = useSelector((state: RootState) => state.tool);\r\n  const markers = useSelector((state: RootState) => state.markers);\r\n  const [subject, setSubject] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const dispatch = useDispatch();\r\n  const editForm = useRef<HTMLFormElement>(null);\r\n\r\n  const handleSetup = () => {\r\n    setSubject(dialogContent.subject);\r\n    setDescription(dialogContent.description);\r\n  };\r\n  const handleClose = () => dispatch(closeDialog());\r\n\r\n  const requestSubmit = () => {\r\n    editForm.current?.requestSubmit(); // Validate form and submit\r\n  };\r\n\r\n  const handleSubmit = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n\r\n    const newMarkers = markers.map((marker: Marker, i: number) => {\r\n      // Find the marker that initiated the edit dialog\r\n      if (i === dialogContent.markerIndex) {\r\n        const { latitude, longitude, city, postcode, address, reporter, id: dbIndex } = marker;\r\n        dispatch(showSpinner());\r\n        if (dbIndex) {\r\n          // Marker already has an associated database id: wanted action is update\r\n          updateReport({ id: dbIndex, subject, description })\r\n            .then(() => {\r\n              dispatch(\r\n                setSnackbar({\r\n                  message: 'Report updated.',\r\n                  open: true,\r\n                  severity: 'success'\r\n                })\r\n              );\r\n            })\r\n            .catch((err) =>\r\n              dispatch(\r\n                setSnackbar({\r\n                  message: err.message,\r\n                  open: true,\r\n                  severity: 'error'\r\n                })\r\n              )\r\n            )\r\n            .finally(() => dispatch(hideSpinner()));\r\n        } else {\r\n          // Marker has no existing database id: wanted action is insert\r\n          insertReport({\r\n            subject,\r\n            description,\r\n            latitude,\r\n            longitude,\r\n            city,\r\n            postcode,\r\n            address,\r\n            reporter\r\n          })\r\n            .then((result) => {\r\n              let newMarkers = [...markers];\r\n              newMarkers[i].id = Number(result);\r\n              newMarkers[i].subject = subject;\r\n              newMarkers[i].description = description;\r\n              dispatch(setMarkers(newMarkers));\r\n              dispatch(\r\n                setSnackbar({\r\n                  message: 'Report posted.',\r\n                  open: true,\r\n                  severity: 'success'\r\n                })\r\n              );\r\n            })\r\n            .catch((err) =>\r\n              dispatch(\r\n                setSnackbar({\r\n                  message: err.message,\r\n                  open: true,\r\n                  severity: 'error'\r\n                })\r\n              )\r\n            )\r\n            .finally(() => dispatch(hideSpinner()));\r\n        }\r\n        return { ...marker, subject, description };\r\n      } else return marker;\r\n    });\r\n\r\n    dispatch(setMarkers(newMarkers));\r\n    handleClose();\r\n  };\r\n\r\n  const reviewModeContent = () => (\r\n    <>\r\n      <DialogTitle id=\"form-dialog-title\">{subject}</DialogTitle>\r\n      <DialogContent>\r\n        <Box color=\"text.secondary\" pb=\"16px\">\r\n          <Box mb=\"16px\">\r\n            <Typography display=\"inline\">Reported by: </Typography>\r\n            <Typography display=\"inline\" color=\"primary\">\r\n              {dialogContent.reporter}\r\n            </Typography>\r\n          </Box>\r\n          <Box mb=\"16px\">\r\n            <Typography>\r\n              {dialogContent.address}, {dialogContent.postcode}, {dialogContent.city}\r\n            </Typography>\r\n            <Typography>Latitude: {dialogContent.latitude}</Typography>\r\n            <Typography>Longitude: {dialogContent.longitude}</Typography>\r\n          </Box>\r\n          <Typography color=\"textPrimary\">{description}</Typography>\r\n        </Box>\r\n      </DialogContent>\r\n    </>\r\n  );\r\n\r\n  const nonReviewModeContent = () => (\r\n    <>\r\n      <DialogTitle id=\"form-dialog-title\">Fault Details</DialogTitle>\r\n      <DialogContent>\r\n        <Box color=\"text.secondary\" mb=\"16px\">\r\n          <Box mb=\"8px\">\r\n            <Typography color=\"textSecondary\" display=\"inline\">\r\n              Reported by: \r\n            </Typography>\r\n            <Typography color=\"primary\" display=\"inline\">\r\n              {dialogContent.reporter}\r\n            </Typography>\r\n          </Box>\r\n          <Typography>\r\n            Set a subject text that appears in the map and a more in-depth description of the issue.\r\n          </Typography>\r\n        </Box>\r\n        <form ref={editForm} onSubmit={handleSubmit}>\r\n          <fieldset\r\n            disabled={dialogContent.reporter !== 'guest' ? true : false}\r\n            style={{ all: 'unset' }}\r\n          >\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"subject\"\r\n              label=\"Subject\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={subject}\r\n              onChange={(e) => setSubject(e.target.value)}\r\n              inputProps={{ minLength: 3, maxLength: 50 }}\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"description\"\r\n              label=\"Description\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              inputProps={{ minLength: 5, maxLength: 500 }}\r\n              multiline={true}\r\n              rows=\"2\"\r\n              required\r\n            />\r\n            <input type=\"submit\" style={{ display: 'none' }} />\r\n          </fieldset>\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={requestSubmit}\r\n          color=\"primary\"\r\n          disabled={dialogContent.reporter !== 'guest' ? true : false}\r\n        >\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      onEnter={handleSetup}\r\n      open={dialogIsOpen}\r\n      onClose={() => handleClose()}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      {tool === 'review' ? reviewModeContent() : nonReviewModeContent()}\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Marker } from 'react-map-gl';\r\nimport MarkerIcon from '@material-ui/icons/Room';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { openDialog, setDialogContent, setMarkers, setSnackbar, showSpinner, hideSpinner } from '../actions';\r\nimport { deleteReport } from '../utils/fetch';\r\nimport { RootState } from '../reducers';\r\nimport { Marker as IMarker, CustomMarkerProps } from '../types';\r\n\r\nfunction CustomMarker(props: CustomMarkerProps) {\r\n  const {\r\n    address,\r\n    city,\r\n    postcode,\r\n    description,\r\n    latitude,\r\n    longitude,\r\n    offsetLeft,\r\n    offsetTop,\r\n    reporter,\r\n    subject,\r\n    localIndex,\r\n    dbIndex = null\r\n  } = props;\r\n\r\n  const tool = useSelector((state: RootState) => state.tool);\r\n  const markers = useSelector((state: RootState) => state.markers);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    function deleteMarkerLocally() {\r\n      const newMarkers = markers.filter((marker: IMarker, i: number) =>\r\n        i === localIndex ? false : true\r\n      );\r\n      dispatch(setMarkers(newMarkers));\r\n    }\r\n\r\n    if (tool === 'delete') {\r\n      if (!dbIndex) return deleteMarkerLocally();\r\n      // TODO: implement authentication (e.g. AWS Cognito)\r\n      if (reporter !== 'guest')\r\n        return dispatch(\r\n          setSnackbar({\r\n            message: 'Not authorized as guest to delete a report posted by admin.',\r\n            open: true,\r\n            severity: 'warning'\r\n          })\r\n        );\r\n      if (window.confirm('Delete this report?')) {\r\n        dispatch(showSpinner())\r\n        deleteReport({ id: dbIndex })\r\n          .then(() => {\r\n            deleteMarkerLocally();\r\n            dispatch(\r\n              setSnackbar({\r\n                message: 'Report deleted.',\r\n                open: true,\r\n                severity: 'success'\r\n              })\r\n            )\r\n          })\r\n          .catch((err) =>\r\n            dispatch(\r\n              setSnackbar({\r\n                message: err.message,\r\n                open: true,\r\n                severity: 'error'\r\n              })\r\n            )\r\n          ).finally(() => dispatch(hideSpinner()))\r\n      }\r\n    } else {\r\n      dispatch(\r\n        setDialogContent({\r\n          address: address || '---',\r\n          city: city || '---',\r\n          postcode: postcode || '---',\r\n          subject,\r\n          description,\r\n          reporter,\r\n          markerIndex: localIndex,\r\n          latitude,\r\n          longitude\r\n        })\r\n      );\r\n      dispatch(openDialog());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Marker latitude={latitude} longitude={longitude} offsetLeft={offsetLeft} offsetTop={offsetTop}>\r\n      <div\r\n        style={{ alignItems: 'center', display: 'flex', fontWeight: 'bold', cursor: 'pointer' }}\r\n        onClick={handleClick}\r\n      >\r\n        <MarkerIcon />\r\n        <span>{subject}</span>\r\n      </div>\r\n    </Marker>\r\n  );\r\n}\r\n\r\nexport default CustomMarker;\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setSnackbar } from '../actions';\r\nimport { RootState } from '../reducers';\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function CustomSnackbar() {\r\n  const { message, open, severity } = useSelector((state: RootState) => state.snackbar);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') return;\r\n    dispatch(\r\n      setSnackbar({\r\n        message,\r\n        open: false,\r\n        severity\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n      <Alert onClose={handleClose} severity={severity}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n","import { reverseGeocode } from './fetch';\r\nimport { setSnackbar, setMarkers } from '../actions';\r\nimport { Marker } from '../types';\r\nimport { Dispatch } from 'redux';\r\n\r\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN;\r\n\r\nexport const addNewMarkerLocally = (\r\n  longitude: number,\r\n  latitude: number,\r\n  markers: Marker[],\r\n  dispatch: Dispatch\r\n) => {\r\n  reverseGeocode(\r\n    `https://api.mapbox.com/geocoding/v5/mapbox.places/${longitude},${latitude}.json?access_token=${MAPBOX_TOKEN}`\r\n  )\r\n    .then((res) => {\r\n      const { city, address = '---', postcode = '---', region, country } = res;\r\n      if (country && country !== 'Finland') {\r\n        return dispatch(\r\n          setSnackbar({\r\n            message: `This app is currently restricted to Finland only. Marker location: ${region}, ${country}`,\r\n            open: true,\r\n            severity: 'warning'\r\n          })\r\n        );\r\n      }\r\n\r\n      if (!city) {\r\n        return dispatch(\r\n          setSnackbar({\r\n            message: 'This location is not near a city with infrastructure.',\r\n            open: true,\r\n            severity: 'warning'\r\n          })\r\n        );\r\n      }\r\n\r\n      const newMarker: Marker = {\r\n        address,\r\n        city,\r\n        description: `${address}, ${postcode}, ${city}`,\r\n        id: null,\r\n        latitude,\r\n        longitude,\r\n        postcode,\r\n        reporter: 'guest',\r\n        subject: 'New marker'\r\n      };\r\n\r\n      dispatch(setMarkers([...markers, newMarker]));\r\n    })\r\n    .catch((err) =>\r\n      dispatch(\r\n        setSnackbar({\r\n          message: err.message,\r\n          open: true,\r\n          severity: 'error'\r\n        })\r\n      )\r\n    );\r\n};\r\n","import React, { useEffect, useMemo } from 'react';\nimport ToolDrawer from './components/ToolDrawer';\nimport MapGL from 'react-map-gl';\nimport CustomAppBar from './components/CustomAppBar';\nimport CustomDialog from './components/CustomDialog';\nimport CustomMarker from './components/CustomMarker';\nimport CustomSnackbar from './components/CustomSnackbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setViewport, setMarkers, setSnackbar, hideSpinner } from './actions';\nimport { getAllReports } from './utils/fetch';\nimport { addNewMarkerLocally } from './utils/markers';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './App.css';\nimport { makeStyles, ThemeOptions } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { purple, blue } from '@material-ui/core/colors';\n\nimport { Marker, Viewport } from './types';\nimport { RootState } from './reducers';\n\nexport const drawerWidth: number = 260;\n\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN;\n\nconst initialTheme: ThemeOptions = {\n  palette: {\n    primary: purple,\n    secondary: blue,\n    type: 'light'\n  }\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex'\n  },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    paddingTop: '56px',\n    overflow: 'hidden'\n  },\n  addToolSelected: {\n    '&>div': {\n      cursor: 'pointer !important'\n    }\n  }\n}));\n\nfunction App() {\n  const muiTheme = createMuiTheme(initialTheme);\n  const classes = useStyles();\n  const markers = useSelector((state: RootState) => state.markers);\n  const viewport = useSelector((state: RootState) => state.viewport);\n  const tool = useSelector((state: RootState) => state.tool);\n  const spinner = useSelector((state: RootState) => state.spinner);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getAllReports()\n      .then((reports) => dispatch(setMarkers(reports)))\n      .catch((err) =>\n        dispatch(\n          setSnackbar({\n            message: err.message,\n            open: true,\n            severity: 'warning'\n          })\n        )\n      ).finally(() => dispatch(hideSpinner()));\n  }, [dispatch]);\n\n  const handleViewportChange = (viewport: Viewport) => dispatch(setViewport(viewport));\n  const handleClick = async (e: any) => {\n    if (tool === 'add') {\n      // Prioritize edit over add on existing markers\n      if (e.target.tagName !== 'DIV') return;\n      addNewMarkerLocally(e.lngLat[0], e.lngLat[1], markers, dispatch);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={muiTheme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <ToolDrawer />\n        <CustomAppBar />\n        <main\n          className={\n            tool === 'add' ? `${classes.content} ${classes.addToolSelected}` : classes.content\n          }\n        >\n          <MapGL\n            {...viewport}\n            width=\"100%\"\n            height=\"100%\"\n            mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n            onViewportChange={handleViewportChange}\n            mapboxApiAccessToken={MAPBOX_TOKEN}\n            onMouseDown={handleClick}\n          >\n            {useMemo(\n              () =>\n                markers.map((m: Marker, i: number) => (\n                  <CustomMarker\n                    key={i}\n                    localIndex={i}\n                    address={m.address}\n                    city={m.city}\n                    postcode={m.postcode}\n                    dbIndex={m.id}\n                    longitude={m.longitude}\n                    latitude={m.latitude}\n                    subject={m.subject}\n                    description={m.description}\n                    reporter={m.reporter}\n                    offsetTop={-24}\n                    offsetLeft={-12}\n                  />\n                )),\n              [markers]\n            )}\n          </MapGL>\n          {/* Only rerender when component's state via useSelector changes */}\n          {useMemo(() => <CustomDialog />, [])}\n          {useMemo(() => <CustomSnackbar />, [])}\n          {spinner && <CircularProgress color=\"secondary\" style={{position: 'absolute', left: '50%', top: '50%', marginLeft: '-20px', marginTop: '-20px'}} />}\n        </main>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { Action } from 'redux';\r\n\r\nconst drawerReducer = (state: boolean = false, action: Action): boolean => {\r\n    switch(action.type) {\r\n        case 'OPEN-DRAWER':\r\n            return true;\r\n        case 'CLOSE-DRAWER':\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default drawerReducer;","import { Viewport, PayloadAction } from '../types';\r\n\r\nconst initialState: Viewport = {\r\n    longitude: 26.2,\r\n    latitude: 62.1,\r\n    zoom: 4.9,\r\n    bearing: 0,\r\n    pitch: 0\r\n}\r\n\r\nconst viewportReducer = (state: Viewport = initialState, action: PayloadAction<Viewport>): Viewport => {\r\n    switch (action.type) {\r\n        case 'VIEWPORT':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default viewportReducer;","import { Tool, PayloadAction } from '../types';\r\n\r\nconst toolReducer = (state: Tool = 'edit', action: PayloadAction<Tool>): Tool => {\r\n    switch (action.type) {\r\n        case 'TOOL':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default toolReducer;","import { Marker, PayloadAction } from '../types';\r\n\r\nconst markerReducer = (state: Marker[] = [], action: PayloadAction<Marker[]>): Marker[] => {\r\n    switch (action.type) {\r\n        case 'SET-MARKERS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default markerReducer;","import { PayloadAction, Snackbar } from '../types';\r\n\r\nconst initialState: Snackbar = { message: '', open: false, severity: undefined };\r\n\r\nconst snackbarReducer = (\r\n  state = initialState,\r\n  action: PayloadAction<Snackbar>\r\n): Snackbar => {\r\n  switch (action.type) {\r\n    case 'SET-SNACKBAR':\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default snackbarReducer;\r\n","import { Action } from 'redux';\r\n\r\nconst spinnerReducer = (state: boolean = true, action: Action): boolean => {\r\n    switch(action.type) {\r\n        case 'SHOW-SPINNER':\r\n            return true;\r\n        case 'HIDE-SPINNER':\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default spinnerReducer;","import { Action } from 'redux';\r\nimport { DialogContent, PayloadAction } from '../types';\r\n\r\nexport const dialogStateReducer = (state: boolean = false, action: Action): boolean => {\r\n  switch (action.type) {\r\n    case 'OPEN-DIALOG':\r\n      return true;\r\n    case 'CLOSE-DIALOG':\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState: DialogContent = {\r\n  address: '',\r\n  city: '',\r\n  postcode: '',\r\n  subject: '',\r\n  description: '',\r\n  reporter: '',\r\n  markerIndex: 0,\r\n  latitude: 0,\r\n  longitude: 0\r\n};\r\n\r\nexport const dialogContentReducer = (\r\n  state = initialState,\r\n  action: PayloadAction<DialogContent>\r\n): DialogContent => {\r\n  switch (action.type) {\r\n    case 'SET-DIALOG':\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import drawerReducer from './drawer';\r\nimport viewportReducer from './viewport';\r\nimport toolReducer from './tool';\r\nimport markerReducer from './markers';\r\nimport snackbarReducer from './snackbar';\r\nimport spinnerReducer from './spinner';\r\nimport { dialogStateReducer, dialogContentReducer } from './dialog';\r\n\r\nimport { combineReducers, Action } from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n  dialogContent: dialogContentReducer,\r\n  dialogIsOpen: dialogStateReducer,\r\n  drawerIsOpen: drawerReducer,\r\n  markers: markerReducer,\r\n  snackbar: snackbarReducer,\r\n  spinner: spinnerReducer,\r\n  tool: toolReducer,\r\n  viewport: viewportReducer\r\n});\r\n\r\nexport const rootReducer = (state: any, action: Action) => {\r\n  if (action.type === 'RESET') {\r\n    state = undefined;\r\n  }\r\n  return allReducers(state, action);\r\n};\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { rootReducer } from './reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}